{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "affinity": {
      "additionalProperties": false,
      "default": {},
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "autoscaling": {
      "additionalProperties": false,
      "description": "Horizontal Pod Autoscaler configuration",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "labels": {
          "additionalProperties": false,
          "default": {},
          "description": "targetMemoryUtilizationPercentage: 80",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "maxReplicas": {
          "default": 100,
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "required": [],
          "title": "targetCPUUtilizationPercentage",
          "type": "integer"
        }
      },
      "required": [],
      "title": "autoscaling",
      "type": "object"
    },
    "certs": {
      "additionalProperties": true,
      "properties": {
        "create": {
          "default": false,
          "required": [],
          "type": "boolean"
        },
        "existingSecret": {
          "default": "",
          "required": [],
          "type": "string"
        }
      },
      "required": [
        "create",
        "existingSecret"
      ],
      "title": "certs",
      "type": "object"
    },
    "config": {
      "additionalProperties": false,
      "description": "Configuration for Postfix and related components",
      "properties": {
        "general": {
          "additionalProperties": true,
          "default": {},
          "required": [],
          "type": "object"
        },
        "opendkim": {
          "additionalProperties": true,
          "default": {},
          "required": [],
          "type": "object"
        },
        "postfix": {
          "additionalProperties": true,
          "default": {},
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "title": "config",
      "type": "object"
    },
    "container": {
      "additionalProperties": false,
      "properties": {
        "postfix": {
          "additionalProperties": false,
          "properties": {
            "securityContext": {
              "additionalProperties": false,
              "default": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "add": [],
                  "drop": [
                    "ALL"
                  ]
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsGroup": 10001,
                "runAsNonRoot": true,
                "runAsUser": 10001,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "properties": {
                "allowPrivilegeEscalation": {
                  "default": false,
                  "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is run as Privileged or has CAP_SYS_ADMIN",
                  "required": [],
                  "type": "boolean"
                },
                "appArmorProfile": {
                  "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile.",
                  "properties": {
                    "localhostProfile": {
                      "required": [],
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "Localhost",
                        "RuntimeDefault"
                      ],
                      "required": []
                    }
                  },
                  "required": [],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "capabilities": {
                  "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                  "properties": {
                    "add": {
                      "default": [],
                      "description": "Added capabilities",
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "type": [
                        "array",
                        "null"
                      ]
                    },
                    "drop": {
                      "default": [
                        "ALL"
                      ],
                      "description": "Dropped capabilities",
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "type": [
                        "array",
                        "null"
                      ]
                    }
                  },
                  "required": [],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "privileged": {
                  "default": false,
                  "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host.",
                  "required": [],
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "procMount": {
                  "description": "procMount denotes the type of proc mount to use for the containers. The default value is Default which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                  "required": [],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "readOnlyRootFilesystem": {
                  "default": false,
                  "description": "Whether this container has a read-only root filesystem. Default is false.",
                  "required": [],
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "runAsGroup": {
                  "default": 10001,
                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                  "format": "int64",
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "runAsNonRoot": {
                  "default": true,
                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                  "required": [],
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "runAsUser": {
                  "default": 10001,
                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                  "format": "int64",
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "seLinuxOptions": {
                  "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                  "properties": {
                    "level": {
                      "required": [],
                      "type": "string"
                    },
                    "role": {
                      "required": [],
                      "type": "string"
                    },
                    "type": {
                      "required": [],
                      "type": "string"
                    },
                    "user": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "seccompProfile": {
                  "description": "The seccomp options to use by the containers in this pod.",
                  "properties": {
                    "localhostProfile": {
                      "required": [],
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "Localhost",
                        "RuntimeDefault"
                      ],
                      "required": []
                    }
                  },
                  "required": [],
                  "type": [
                    "object",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "securityContext",
              "type": [
                "object",
                "null"
              ]
            }
          },
          "required": [],
          "title": "postfix",
          "type": "object"
        }
      },
      "required": [
        "postfix"
      ],
      "title": "container",
      "type": "object"
    },
    "deployment": {
      "additionalProperties": false,
      "default": {},
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "labels": {
          "additionalProperties": false,
          "required": [],
          "title": "labels",
          "type": "object"
        }
      },
      "required": [
        "labels",
        "annotations"
      ],
      "title": "deployment",
      "type": "object"
    },
    "dns": {
      "additionalProperties": false,
      "description": "DNS configuration for the pod",
      "properties": {
        "nameservers": {
          "additionalProperties": false,
          "default": {},
          "description": "policy: \"None\"",
          "required": [],
          "title": "nameservers",
          "type": "object"
        },
        "options": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "options",
          "type": "object"
        },
        "policy": {
          "default": "",
          "required": [],
          "title": "policy",
          "type": "string"
        },
        "searches": {
          "default": "",
          "required": [],
          "title": "searches",
          "type": "string"
        }
      },
      "required": [],
      "title": "dns",
      "type": "object"
    },
    "enabled": {
      "description": "Conditional property used in parent chart",
      "required": [],
      "title": "enabled",
      "type": "boolean"
    },
    "existingSecret": {
      "default": "",
      "description": "Use an existing secret to share with the pod as environment variables",
      "required": [],
      "title": "existingSecret",
      "type": "string"
    },
    "extraContainers": {
      "default": [],
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraContainers",
      "type": "array"
    },
    "extraEnv": {
      "default": [],
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "extraInitContainers": {
      "default": [],
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraInitContainers",
      "type": "array"
    },
    "extraVolumeMounts": {
      "default": [],
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumeMounts",
      "type": "array"
    },
    "extraVolumes": {
      "default": [],
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumes",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override the fullname template",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "headlessService": {
      "additionalProperties": false,
      "description": "StatefulSets now require a headless service\nhttps://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#limitations\nHeadless service configuration for StatefulSets",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "labels": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "labels",
          "type": "object"
        }
      },
      "required": [],
      "title": "headlessService",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "description": "Container image configuration",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "boky/postfix",
          "description": "Image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "latest",
          "description": "Image tag (If not specified uses chart's AppVersion as the tag)",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "repository"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "default": [],
      "description": "Array of imagePullSecrets for pulling images from private registries",
      "items": {
        "properties": {
          "name": {
            "required": [],
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "lifecycle": {
      "additionalProperties": false,
      "default": {},
      "properties": {
        "postStart": {
          "additionalProperties": false,
          "required": [],
          "title": "postStart",
          "type": "object"
        }
      },
      "required": [
        "postStart"
      ],
      "title": "lifecycle",
      "type": "object"
    },
    "livenessProbe": {
      "additionalProperties": true,
      "description": "Liveness probe configuration",
      "properties": {
        "exec": {
          "additionalProperties": false,
          "properties": {
            "command": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            }
          },
          "required": [
            "command"
          ],
          "title": "exec",
          "type": "object"
        },
        "failureThreshold": {
          "default": 2,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 5,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 5,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        }
      },
      "required": [
        "initialDelaySeconds",
        "periodSeconds",
        "failureThreshold",
        "exec"
      ],
      "title": "livenessProbe",
      "type": "object"
    },
    "metrics": {
      "additionalProperties": true,
      "description": "Metrics exporter configuration",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": false,
          "properties": {
            "repository": {
              "default": "boky/postfix-exporter",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "latest",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repository",
            "tag"
          ],
          "title": "image",
          "type": "object"
        },
        "logrotate": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "logrotate.conf": {
              "default": "/var/log/mail.log {\n    copytruncate\n    rotate 1\n    monthly\n    minsize 1M\n    compress\n    missingok\n    notifempty\n    dateext\n    olddir /var/log/\n    maxage 90\n}\n",
              "required": [],
              "title": "logrotate.conf",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "logrotate.conf"
          ],
          "title": "logrotate",
          "type": "object"
        },
        "maillog": {
          "default": "/var/log/mail.log",
          "required": [],
          "title": "maillog",
          "type": "string"
        },
        "path": {
          "default": "/metrics",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "port": {
          "default": 9154,
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "default": {},
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": false,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [
            "labels",
            "annotations"
          ],
          "title": "service",
          "type": "object"
        },
        "serviceMonitor": {
          "additionalProperties": false,
          "default": {},
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": false,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "labels",
            "annotations"
          ],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [],
      "title": "metrics",
      "type": "object"
    },
    "mountSecret": {
      "additionalProperties": false,
      "description": "Secret to be deployed and mounted into a specific directory in the pod",
      "properties": {
        "data": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "data",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "path": {
          "default": "/var/lib/secret",
          "required": [],
          "title": "path",
          "type": "string"
        }
      },
      "required": [],
      "title": "mountSecret",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "String to partially override the fullname template",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "additionalProperties": false,
      "default": {},
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "persistence": {
      "additionalProperties": false,
      "description": "Persistence configuration for the pod",
      "properties": {
        "accessModes": {
          "default": [
            "ReadWriteOnce"
          ],
          "items": {
            "anyOf": [
              {
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "accessModes",
          "type": "array"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingClaim": {
          "default": "",
          "required": [],
          "title": "existingClaim",
          "type": "string"
        },
        "size": {
          "default": "1Gi",
          "required": [],
          "title": "size",
          "type": "string"
        },
        "storageClass": {
          "default": "",
          "required": [],
          "title": "storageClass",
          "type": "string"
        }
      },
      "required": [],
      "title": "persistence",
      "type": "object"
    },
    "pod": {
      "additionalProperties": false,
      "default": {},
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "labels": {
          "additionalProperties": false,
          "default": {},
          "description": "capabilities:\n  drop:\n  - ALL\nreadOnlyRootFilesystem: true\nrunAsNonRoot: true\nrunAsUser: 1000",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": false,
          "default": {
            "fsGroup": 10001,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001,
            "seccompProfile": {
              "type": "RuntimeDefault"
            }
          },
          "properties": {
            "appArmorProfile": {
              "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.",
              "properties": {
                "localhostProfile": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "Localhost",
                    "RuntimeDefault"
                  ],
                  "required": []
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "fsGroup": {
              "default": 10001,
              "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\\n\\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\\n\\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "fsGroupChangePolicy": {
              "default": "Always",
              "enum": [
                "OnRootMismatch",
                "Always"
              ],
              "required": []
            },
            "runAsGroup": {
              "default": 10001,
              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "runAsNonRoot": {
              "default": true,
              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "required": [],
              "type": [
                "boolean",
                "null"
              ]
            },
            "runAsUser": {
              "default": 10001,
              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "seLinuxOptions": {
              "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "properties": {
                "level": {
                  "required": [],
                  "type": "string"
                },
                "role": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "required": [],
                  "type": "string"
                },
                "user": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "seccompProfile": {
              "description": "The seccomp options to use by the containers in this pod.",
              "properties": {
                "localhostProfile": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "Localhost",
                    "RuntimeDefault"
                  ],
                  "required": []
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "supplementalGroups": {
              "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID and fsGroup (if specified).  If the SupplementalGroupsPolicy feature is enabled, the supplementalGroupsPolicy field determines whether these are in addition to or instead of any group memberships defined in the container image. If unspecified, no additional groups are added, though group memberships defined in the container image may still be used, depending on the supplementalGroupsPolicy field.",
              "items": {
                "format": "int64",
                "required": [],
                "type": [
                  "integer",
                  "null"
                ]
              },
              "required": [],
              "type": [
                "array",
                "null"
              ]
            },
            "supplementalGroupsPolicy": {
              "default": "Merge",
              "description": "Defines how supplemental groups of the first container processes are calculated. Valid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used. (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled and the container runtime must implement support for this feature.",
              "enum": [
                "Merge",
                "Strict"
              ],
              "required": []
            },
            "sysctls": {
              "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
              "items": {
                "properties": {
                  "name": {
                    "required": [],
                    "type": "string"
                  },
                  "value": {
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "type": [
                "array",
                "null"
              ]
            }
          },
          "required": [],
          "title": "securityContext",
          "type": [
            "object",
            "null"
          ]
        }
      },
      "required": [],
      "title": "pod",
      "type": "object"
    },
    "readinessProbe": {
      "additionalProperties": true,
      "description": "Readiness probe configuration",
      "properties": {
        "exec": {
          "additionalProperties": false,
          "properties": {
            "command": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            }
          },
          "required": [
            "command"
          ],
          "title": "exec",
          "type": "object"
        },
        "failureThreshold": {
          "default": 6,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 10,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 60,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 8,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [
        "initialDelaySeconds",
        "periodSeconds",
        "failureThreshold",
        "timeoutSeconds",
        "exec"
      ],
      "title": "readinessProbe",
      "type": "object"
    },
    "recreateOnRedeploy": {
      "default": true,
      "description": "Tell helm to restart (recreate) pods on every deploy. Setting this to true will inject\n`date/deploy-date: \u003ctimestamp\u003e` annotation into pod specification for StateFulset. This\nensures that the Pod is recreated with the new changes.\n\nFeel free to disable this but doing so **IS IT YOUR OWN RISK**. By disabling this feature\nyou might run into issues where some changes are not reflected on the Pod. If you experience\nthis with this setting set to `false` the first thing to try out is to restart / delete\na pod and let `StatefulSet` recreate it.\nWhether to recreate pods on every deploy",
      "required": [],
      "title": "recreateOnRedeploy",
      "type": "boolean"
    },
    "replicaCount": {
      "default": 1,
      "description": "Number of replicas to run",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": false,
      "default": {},
      "description": "Resource requests and limits for the container",
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "secret": {
      "additionalProperties": false,
      "default": {},
      "description": "Data to be stored in a Secret and shared with the pod as environment variables",
      "required": [],
      "title": "secret",
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "Kubernetes Service configuration",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "default": {},
          "description": "Additional annotations for the service",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "labels": {
          "additionalProperties": false,
          "default": {},
          "description": "Additional labels for the service",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "port": {
          "default": 587,
          "description": "Kubernetes Service port",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Kubernetes Service type",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer"
          ],
          "required": [],
          "title": "type"
        }
      },
      "required": [
        "type",
        "port"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "description": "Service account configuration",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "default": {},
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "startupProbe": {
      "additionalProperties": true,
      "description": "Startup probe configuration",
      "properties": {
        "exec": {
          "additionalProperties": false,
          "properties": {
            "command": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "command",
              "type": "array"
            }
          },
          "required": [
            "command"
          ],
          "title": "exec",
          "type": "object"
        },
        "failureThreshold": {
          "default": 12,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 5,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 5,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        }
      },
      "required": [
        "initialDelaySeconds",
        "periodSeconds",
        "failureThreshold",
        "exec"
      ],
      "title": "startupProbe",
      "type": "object"
    },
    "tolerations": {
      "default": [],
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "replicaCount",
    "image",
    "serviceAccount",
    "service",
    "headlessService",
    "metrics",
    "autoscaling",
    "container",
    "mountSecret",
    "config",
    "dns",
    "persistence",
    "readinessProbe",
    "livenessProbe",
    "startupProbe"
  ],
  "type": "object"
}