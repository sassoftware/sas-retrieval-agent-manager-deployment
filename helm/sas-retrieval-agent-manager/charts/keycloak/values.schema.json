{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "affinity": {
      "additionalProperties": false,
      "description": "Map of node/pod affinities",
      "properties": {
        "nodeAffinity": {
          "additionalProperties": false,
          "properties": {
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "preference": {
                        "additionalProperties": false,
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "key": {
                                      "default": "sas.com/deployment",
                                      "required": [],
                                      "title": "key",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "default": "In",
                                      "required": [],
                                      "title": "operator",
                                      "type": "string"
                                    },
                                    "values": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "required": [],
                                            "type": "string"
                                          }
                                        ],
                                        "required": []
                                      },
                                      "required": [],
                                      "title": "values",
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator",
                                    "values"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "required": []
                            },
                            "required": [],
                            "title": "matchExpressions",
                            "type": "array"
                          }
                        },
                        "required": [
                          "matchExpressions"
                        ],
                        "title": "preference",
                        "type": "object"
                      },
                      "weight": {
                        "default": 1,
                        "required": [],
                        "title": "weight",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "weight",
                      "preference"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "preference": {
                        "additionalProperties": false,
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "key": {
                                      "default": "workload.sas.com/class",
                                      "required": [],
                                      "title": "key",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "default": "In",
                                      "required": [],
                                      "title": "operator",
                                      "type": "string"
                                    },
                                    "values": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "required": [],
                                            "type": "string"
                                          }
                                        ],
                                        "required": []
                                      },
                                      "required": [],
                                      "title": "values",
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator",
                                    "values"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "required": []
                            },
                            "required": [],
                            "title": "matchExpressions",
                            "type": "array"
                          }
                        },
                        "required": [
                          "matchExpressions"
                        ],
                        "title": "preference",
                        "type": "object"
                      },
                      "weight": {
                        "default": 2,
                        "required": [],
                        "title": "weight",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "weight",
                      "preference"
                    ],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "preferredDuringSchedulingIgnoredDuringExecution",
              "type": "array"
            }
          },
          "required": [
            "preferredDuringSchedulingIgnoredDuringExecution"
          ],
          "title": "nodeAffinity",
          "type": "object"
        }
      },
      "required": [
        "nodeAffinity"
      ],
      "title": "affinity",
      "type": [
        "object",
        "null"
      ]
    },
    "autoscaling": {
      "additionalProperties": false,
      "description": "Horizontal Pod Autoscaler configuration",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 100,
          "format": "int32",
          "required": [],
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "format": "int32",
          "required": [],
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "format": "int32",
          "required": [],
          "type": "integer"
        },
        "targetMemoryUtilizationPercentage": {
          "default": 80,
          "format": "int32",
          "required": [],
          "type": "integer"
        }
      },
      "required": [],
      "title": "autoscaling",
      "type": [
        "object",
        "null"
      ]
    },
    "fullnameOverride": {
      "default": "sas-retrieval-agent-manager-keycloak",
      "description": "String to fully override the fullname template with a string",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "additionalProperties": false,
      "description": "Global configuration for Keycloak and related services",
      "properties": {
        "clusterName": {
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "clusterUrl": {
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "configuration": {
          "required": [],
          "type": "object"
        },
        "domain": {
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "imagePullSecrets": {
          "required": [],
          "type": [
            "array",
            "null"
          ]
        },
        "ingress": {
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "repo": {
          "properties": {
            "base": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "stage": {
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "syncWindows": {
          "items": {
            "properties": {
              "applications": {
                "items": {
                  "required": [],
                  "type": "string"
                },
                "required": [],
                "type": "array"
              },
              "duration": {
                "required": [],
                "type": "string"
              },
              "kind": {
                "enum": [
                  "allow",
                  "deny"
                ],
                "required": [],
                "type": "string"
              },
              "schedule": {
                "format": "cron",
                "required": [],
                "type": "string"
              },
              "timezone": {
                "default": "US/Eastern",
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "type": [
            "array",
            "null"
          ]
        }
      },
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "description": "Container image configuration for Keycloak and related services",
      "properties": {
        "keycloak": {
          "additionalProperties": false,
          "description": "Container image configuration for Keycloak",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy for Keycloak container",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repo": {
              "additionalProperties": false,
              "description": "Container image configuration for Keycloak",
              "properties": {
                "base": {
                  "default": "quay.io",
                  "description": "Container registry base URL for Keycloak",
                  "required": [],
                  "title": "base",
                  "type": "string"
                },
                "path": {
                  "default": "keycloak/keycloak",
                  "description": "Container image path/name for Keycloak",
                  "required": [],
                  "title": "path",
                  "type": "string"
                }
              },
              "required": [
                "base",
                "path"
              ],
              "title": "repo",
              "type": "object"
            },
            "tag": {
              "default": "26.3.2",
              "description": "Keycloak container image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repo",
            "tag"
          ],
          "title": "keycloak",
          "type": "object"
        },
        "kubectl": {
          "additionalProperties": false,
          "description": "kubectl container image configuration (used for Kubernetes operations)",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy for kubectl container",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repo": {
              "additionalProperties": false,
              "description": "Container image configuration for kubectl container",
              "properties": {
                "base": {
                  "default": "docker.io",
                  "description": "Container registry base URL for kubectl",
                  "required": [],
                  "title": "base",
                  "type": "string"
                },
                "path": {
                  "default": "alpine/k8s",
                  "description": "Container image path/name for kubectl",
                  "required": [],
                  "title": "path",
                  "type": "string"
                }
              },
              "required": [
                "base",
                "path"
              ],
              "title": "repo",
              "type": "object"
            },
            "tag": {
              "default": "1.31.12",
              "description": "kubectl container image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repo",
            "tag"
          ],
          "title": "kubectl",
          "type": "object"
        },
        "postgres": {
          "additionalProperties": false,
          "description": "PostgreSQL database container image configuration",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy for PostgreSQL container",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repo": {
              "additionalProperties": false,
              "description": "Container image configuration for Postgres",
              "properties": {
                "base": {
                  "default": "docker.io",
                  "description": "Container registry base URL for PostgreSQL",
                  "required": [],
                  "title": "base",
                  "type": "string"
                },
                "path": {
                  "default": "postgres",
                  "description": "Container image path/name for PostgreSQL",
                  "required": [],
                  "title": "path",
                  "type": "string"
                }
              },
              "required": [
                "base",
                "path"
              ],
              "title": "repo",
              "type": "object"
            },
            "tag": {
              "default": "15-alpine",
              "description": "PostgreSQL container image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repo",
            "tag"
          ],
          "title": "postgres",
          "type": "object"
        },
        "theme": {
          "additionalProperties": false,
          "description": "Custom theme container image configuration",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy for theme container",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repo": {
              "additionalProperties": false,
              "description": "Container image configuration for the SAS Keycloak theme",
              "properties": {
                "base": {
                  "default": "cr.sas.com",
                  "description": "Container registry base URL for theme",
                  "required": [],
                  "title": "base",
                  "type": "string"
                },
                "path": {
                  "default": "viya-4-x64_oci_linux_2-docker/sas-iot-keycloak-theme",
                  "description": "Container image path/name for theme",
                  "required": [],
                  "title": "path",
                  "type": "string"
                }
              },
              "required": [
                "base",
                "path"
              ],
              "title": "repo",
              "type": "object"
            },
            "tag": {
              "default": "1.2.19-20250908.1757359720294",
              "description": "Theme container image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repo",
            "tag"
          ],
          "title": "theme",
          "type": "object"
        }
      },
      "required": [
        "keycloak",
        "postgres",
        "theme",
        "kubectl"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "default": [
        {
          "name": "cr-sas-secret"
        }
      ],
      "description": "Array of imagePullSecrets in the namespace for pulling images from private registries",
      "items": {
        "properties": {
          "name": {
            "required": [],
            "type": "string"
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "additionalProperties": false,
      "description": "Ingress configuration for external access to Keycloak",
      "properties": {
        "admin": {
          "additionalProperties": false,
          "description": "Admin interface ingress configuration",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "type": "boolean"
            },
            "host": {
              "default": "",
              "required": [],
              "type": "string"
            },
            "path": {
              "default": "/SASRetrievalAgentManager/auth/admin",
              "required": [],
              "type": "string"
            },
            "pathType": {
              "default": "Prefix",
              "required": [],
              "type": "string"
            },
            "sourceRange": {
              "default": [],
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "type": "array"
            }
          },
          "required": [],
          "title": "admin",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": false,
          "default": {
            "kubernetes.io/ingress.allow-http": "false",
            "nginx.ingress.kubernetes.io/proxy-buffer-size": "16k",
            "nginx.ingress.kubernetes.io/ssl-redirect": "true"
          },
          "description": "Annotations for the Ingress",
          "properties": {
            "kubernetes.io/ingress.allow-http": {
              "default": "false",
              "description": "Disallow HTTP traffic, force HTTPS only",
              "required": [],
              "title": "kubernetes.io/ingress.allow-http",
              "type": "string"
            },
            "nginx.ingress.kubernetes.io/proxy-buffer-size": {
              "default": "16k",
              "description": "Size of buffer used for reading the first part of response received from proxied server",
              "required": [],
              "title": "nginx.ingress.kubernetes.io/proxy-buffer-size",
              "type": "string"
            },
            "nginx.ingress.kubernetes.io/ssl-redirect": {
              "default": "true",
              "description": "Force SSL redirect",
              "required": [],
              "title": "nginx.ingress.kubernetes.io/ssl-redirect",
              "type": "string"
            }
          },
          "required": [
            "kubernetes.io/ingress.allow-http",
            "nginx.ingress.kubernetes.io/proxy-buffer-size",
            "nginx.ingress.kubernetes.io/ssl-redirect"
          ],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "nginx",
          "description": "Class name of the Ingress",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "description": "Enable ingress for external access to Keycloak",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "Hosts configuration (ignored if useGlobal is true)",
          "items": {
            "properties": {
              "host": {
                "required": [],
                "type": "string"
              },
              "paths": {
                "items": {
                  "properties": {
                    "path": {
                      "default": "/SASRetrievalAgentManager/auth(/(realms|resources)/(.*))$",
                      "required": [],
                      "type": "string"
                    },
                    "pathType": {
                      "default": "ImplementationSpecific",
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "required": [],
                "type": [
                  "array",
                  "null"
                ]
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "hosts",
          "type": [
            "array",
            "null"
          ]
        },
        "paths": {
          "default": [
            {
              "path": "/SASRetrievalAgentManager/auth(/(realms|resources)/(.*))$",
              "pathType": "ImplementationSpecific"
            }
          ],
          "description": "Paths configuration (used when useGlobal is true)",
          "items": {
            "properties": {
              "path": {
                "default": "/SASRetrievalAgentManager/auth(/(realms|resources)/(.*))$",
                "required": [],
                "type": "string"
              },
              "pathType": {
                "default": "ImplementationSpecific",
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "paths",
          "type": [
            "array",
            "null"
          ]
        },
        "tls": {
          "default": [
            {
              "path": "/SASRetrievalAgentManager/auth(/(realms|resources)/(.*))$",
              "pathType": "ImplementationSpecific"
            }
          ],
          "description": "TLS configuration for ingress",
          "items": {
            "properties": {
              "hosts": {
                "items": {
                  "required": [],
                  "type": "string"
                },
                "required": [],
                "type": "array"
              },
              "secretName": {
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tls",
          "type": [
            "array",
            "null"
          ]
        },
        "useGlobal": {
          "default": false,
          "description": "Use global ingress configuration instead of local hosts configuration",
          "required": [],
          "title": "useGlobal",
          "type": "boolean"
        }
      },
      "required": [
        "useGlobal",
        "enabled",
        "className",
        "admin"
      ],
      "title": "ingress",
      "type": "object"
    },
    "livenessProbe": {
      "additionalProperties": true,
      "description": "Liveness probe configuration for Keycloak",
      "properties": {
        "failureThreshold": {
          "default": 5,
          "description": "Number of consecutive failures required to mark container as not ready",
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": false,
          "description": "HTTP GET probe configuration",
          "properties": {
            "path": {
              "default": "/SASRetrievalAgentManager/auth/realms/master",
              "description": "Path to probe for liveness",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": "http",
              "required": [],
              "title": "port",
              "type": "string"
            }
          },
          "required": [
            "path",
            "port"
          ],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 240,
          "description": "Initial delay before starting probes",
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 30,
          "description": "How often to perform the probe",
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        }
      },
      "required": [
        "failureThreshold",
        "httpGet",
        "initialDelaySeconds",
        "periodSeconds"
      ],
      "title": "livenessProbe",
      "type": [
        "object",
        "null"
      ]
    },
    "mail": {
      "description": "An outgoing SMTP mail relay for your applications in Kubernetes cluster",
      "properties": {
        "affinity": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "affinity",
          "type": "object"
        },
        "autoscaling": {
          "additionalProperties": false,
          "description": "Horizontal Pod Autoscaler configuration",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "default": {},
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": false,
              "default": {},
              "description": "targetMemoryUtilizationPercentage: 80",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "maxReplicas": {
              "default": 100,
              "required": [],
              "title": "maxReplicas",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "required": [],
              "title": "minReplicas",
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 80,
              "required": [],
              "title": "targetCPUUtilizationPercentage",
              "type": "integer"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": "object"
        },
        "certs": {
          "additionalProperties": true,
          "properties": {
            "create": {
              "default": false,
              "required": [],
              "type": "boolean"
            },
            "existingSecret": {
              "default": "",
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "title": "certs",
          "type": "object"
        },
        "config": {
          "additionalProperties": false,
          "description": "Configuration for Postfix and related components",
          "properties": {
            "general": {
              "additionalProperties": true,
              "default": {},
              "required": [],
              "type": "object"
            },
            "opendkim": {
              "additionalProperties": true,
              "default": {},
              "required": [],
              "type": "object"
            },
            "postfix": {
              "additionalProperties": true,
              "default": {},
              "required": [],
              "type": "object"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "container": {
          "additionalProperties": false,
          "properties": {
            "postfix": {
              "additionalProperties": false,
              "properties": {
                "securityContext": {
                  "additionalProperties": false,
                  "default": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 10001,
                    "runAsNonRoot": true,
                    "runAsUser": 10001,
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "default": false,
                      "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is run as Privileged or has CAP_SYS_ADMIN",
                      "required": [],
                      "type": "boolean"
                    },
                    "appArmorProfile": {
                      "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile.",
                      "properties": {
                        "localhostProfile": {
                          "required": [],
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "Localhost",
                            "RuntimeDefault"
                          ],
                          "required": []
                        }
                      },
                      "required": [],
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "capabilities": {
                      "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                      "properties": {
                        "add": {
                          "default": [],
                          "description": "Added capabilities",
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "drop": {
                          "default": [
                            "ALL"
                          ],
                          "description": "Dropped capabilities",
                          "items": {
                            "required": [],
                            "type": "string"
                          },
                          "required": [],
                          "type": [
                            "array",
                            "null"
                          ]
                        }
                      },
                      "required": [],
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "privileged": {
                      "default": false,
                      "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host.",
                      "required": [],
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "procMount": {
                      "description": "procMount denotes the type of proc mount to use for the containers. The default value is Default which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                      "required": [],
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "readOnlyRootFilesystem": {
                      "default": false,
                      "description": "Whether this container has a read-only root filesystem. Default is false.",
                      "required": [],
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "runAsGroup": {
                      "default": 10001,
                      "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                      "format": "int64",
                      "required": [],
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "runAsNonRoot": {
                      "default": true,
                      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                      "required": [],
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "runAsUser": {
                      "default": 10001,
                      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                      "format": "int64",
                      "required": [],
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "seLinuxOptions": {
                      "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                      "properties": {
                        "level": {
                          "required": [],
                          "type": "string"
                        },
                        "role": {
                          "required": [],
                          "type": "string"
                        },
                        "type": {
                          "required": [],
                          "type": "string"
                        },
                        "user": {
                          "required": [],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "seccompProfile": {
                      "description": "The seccomp options to use by the containers in this pod.",
                      "properties": {
                        "localhostProfile": {
                          "required": [],
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "Localhost",
                            "RuntimeDefault"
                          ],
                          "required": []
                        }
                      },
                      "required": [],
                      "type": [
                        "object",
                        "null"
                      ]
                    }
                  },
                  "required": [],
                  "title": "securityContext",
                  "type": [
                    "object",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "postfix",
              "type": "object"
            }
          },
          "required": [],
          "title": "container",
          "type": "object"
        },
        "deployment": {
          "additionalProperties": false,
          "default": {},
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": false,
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "deployment",
          "type": "object"
        },
        "dns": {
          "additionalProperties": false,
          "description": "DNS configuration for the pod",
          "properties": {
            "nameservers": {
              "additionalProperties": false,
              "default": {},
              "description": "policy: \"None\"",
              "required": [],
              "title": "nameservers",
              "type": "object"
            },
            "options": {
              "additionalProperties": false,
              "default": {},
              "required": [],
              "title": "options",
              "type": "object"
            },
            "policy": {
              "default": "",
              "required": [],
              "title": "policy",
              "type": "string"
            },
            "searches": {
              "default": "",
              "required": [],
              "title": "searches",
              "type": "string"
            }
          },
          "required": [],
          "title": "dns",
          "type": "object"
        },
        "enabled": {
          "description": "Conditional property used in parent chart",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingSecret": {
          "default": "",
          "description": "Use an existing secret to share with the pod as environment variables",
          "required": [],
          "title": "existingSecret",
          "type": "string"
        },
        "extraContainers": {
          "default": [],
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraContainers",
          "type": "array"
        },
        "extraEnv": {
          "default": [],
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraInitContainers": {
          "default": [],
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraInitContainers",
          "type": "array"
        },
        "extraVolumeMounts": {
          "default": [],
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "default": [],
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "fullnameOverride": {
          "default": "",
          "description": "String to fully override the fullname template",
          "required": [],
          "title": "fullnameOverride",
          "type": "string"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "headlessService": {
          "additionalProperties": false,
          "description": "StatefulSets now require a headless service\nhttps://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#limitations\nHeadless service configuration for StatefulSets",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "default": {},
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": false,
              "default": {},
              "required": [],
              "title": "labels",
              "type": "object"
            }
          },
          "required": [],
          "title": "headlessService",
          "type": "object"
        },
        "image": {
          "additionalProperties": false,
          "description": "Container image configuration",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy",
              "required": [],
              "title": "pullPolicy",
              "type": "string"
            },
            "repository": {
              "default": "boky/postfix",
              "description": "Image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "latest",
              "description": "Image tag (If not specified uses chart's AppVersion as the tag)",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [],
          "title": "image",
          "type": "object"
        },
        "imagePullSecrets": {
          "default": [],
          "description": "Array of imagePullSecrets for pulling images from private registries",
          "items": {
            "properties": {
              "name": {
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "lifecycle": {
          "additionalProperties": false,
          "default": {},
          "properties": {
            "postStart": {
              "additionalProperties": false,
              "required": [],
              "title": "postStart",
              "type": "object"
            }
          },
          "required": [],
          "title": "lifecycle",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Liveness probe configuration",
          "properties": {
            "exec": {
              "additionalProperties": false,
              "properties": {
                "command": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "command",
                  "type": "array"
                }
              },
              "required": [],
              "title": "exec",
              "type": "object"
            },
            "failureThreshold": {
              "default": 2,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 5,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 5,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "metrics": {
          "additionalProperties": true,
          "description": "Metrics exporter configuration",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "image": {
              "additionalProperties": false,
              "properties": {
                "repository": {
                  "default": "boky/postfix-exporter",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "latest",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "logrotate": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "logrotate.conf": {
                  "default": "/var/log/mail.log {\n    copytruncate\n    rotate 1\n    monthly\n    minsize 1M\n    compress\n    missingok\n    notifempty\n    dateext\n    olddir /var/log/\n    maxage 90\n}\n",
                  "required": [],
                  "title": "logrotate.conf",
                  "type": "string"
                }
              },
              "required": [],
              "title": "logrotate",
              "type": "object"
            },
            "maillog": {
              "default": "/var/log/mail.log",
              "required": [],
              "title": "maillog",
              "type": "string"
            },
            "path": {
              "default": "/metrics",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": 9154,
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "resources": {
              "additionalProperties": false,
              "default": {},
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "service": {
              "additionalProperties": false,
              "default": {},
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "labels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            },
            "serviceMonitor": {
              "additionalProperties": false,
              "default": {},
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": false,
                  "required": [],
                  "title": "labels",
                  "type": "object"
                }
              },
              "required": [],
              "title": "serviceMonitor",
              "type": "object"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        },
        "mountSecret": {
          "additionalProperties": false,
          "description": "Secret to be deployed and mounted into a specific directory in the pod",
          "properties": {
            "data": {
              "additionalProperties": false,
              "default": {},
              "required": [],
              "title": "data",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "path": {
              "default": "/var/lib/secret",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [],
          "title": "mountSecret",
          "type": "object"
        },
        "nameOverride": {
          "default": "",
          "description": "String to partially override the fullname template",
          "required": [],
          "title": "nameOverride",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": false,
          "default": {},
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "persistence": {
          "additionalProperties": false,
          "description": "Persistence configuration for the pod",
          "properties": {
            "accessModes": {
              "default": [
                "ReadWriteOnce"
              ],
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "accessModes",
              "type": "array"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingClaim": {
              "default": "",
              "required": [],
              "title": "existingClaim",
              "type": "string"
            },
            "size": {
              "default": "1Gi",
              "required": [],
              "title": "size",
              "type": "string"
            },
            "storageClass": {
              "default": "",
              "required": [],
              "title": "storageClass",
              "type": "string"
            }
          },
          "required": [],
          "title": "persistence",
          "type": "object"
        },
        "pod": {
          "additionalProperties": false,
          "default": {},
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "default": {},
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": false,
              "default": {},
              "description": "capabilities:\n  drop:\n  - ALL\nreadOnlyRootFilesystem: true\nrunAsNonRoot: true\nrunAsUser: 1000",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "securityContext": {
              "additionalProperties": false,
              "default": {
                "fsGroup": 10001,
                "runAsGroup": 10001,
                "runAsNonRoot": true,
                "runAsUser": 10001,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "properties": {
                "appArmorProfile": {
                  "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.",
                  "properties": {
                    "localhostProfile": {
                      "required": [],
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "Localhost",
                        "RuntimeDefault"
                      ],
                      "required": []
                    }
                  },
                  "required": [],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "fsGroup": {
                  "default": 10001,
                  "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\\n\\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\\n\\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
                  "format": "int64",
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "fsGroupChangePolicy": {
                  "default": "Always",
                  "enum": [
                    "OnRootMismatch",
                    "Always"
                  ],
                  "required": []
                },
                "runAsGroup": {
                  "default": 10001,
                  "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                  "format": "int64",
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "runAsNonRoot": {
                  "default": true,
                  "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                  "required": [],
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "runAsUser": {
                  "default": 10001,
                  "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                  "format": "int64",
                  "required": [],
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "seLinuxOptions": {
                  "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                  "properties": {
                    "level": {
                      "required": [],
                      "type": "string"
                    },
                    "role": {
                      "required": [],
                      "type": "string"
                    },
                    "type": {
                      "required": [],
                      "type": "string"
                    },
                    "user": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "seccompProfile": {
                  "description": "The seccomp options to use by the containers in this pod.",
                  "properties": {
                    "localhostProfile": {
                      "required": [],
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "Localhost",
                        "RuntimeDefault"
                      ],
                      "required": []
                    }
                  },
                  "required": [],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "supplementalGroups": {
                  "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID and fsGroup (if specified).  If the SupplementalGroupsPolicy feature is enabled, the supplementalGroupsPolicy field determines whether these are in addition to or instead of any group memberships defined in the container image. If unspecified, no additional groups are added, though group memberships defined in the container image may still be used, depending on the supplementalGroupsPolicy field.",
                  "items": {
                    "format": "int64",
                    "required": [],
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "required": [],
                  "type": [
                    "array",
                    "null"
                  ]
                },
                "supplementalGroupsPolicy": {
                  "default": "Merge",
                  "description": "Defines how supplemental groups of the first container processes are calculated. Valid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used. (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled and the container runtime must implement support for this feature.",
                  "enum": [
                    "Merge",
                    "Strict"
                  ],
                  "required": []
                },
                "sysctls": {
                  "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
                  "items": {
                    "properties": {
                      "name": {
                        "required": [],
                        "type": "string"
                      },
                      "value": {
                        "required": [],
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "type": [
                    "array",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "securityContext",
              "type": [
                "object",
                "null"
              ]
            }
          },
          "required": [],
          "title": "pod",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe configuration",
          "properties": {
            "exec": {
              "additionalProperties": false,
              "properties": {
                "command": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "command",
                  "type": "array"
                }
              },
              "required": [],
              "title": "exec",
              "type": "object"
            },
            "failureThreshold": {
              "default": 6,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 10,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 60,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            },
            "timeoutSeconds": {
              "default": 8,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "recreateOnRedeploy": {
          "default": true,
          "description": "Tell helm to restart (recreate) pods on every deploy. Setting this to true will inject\n`date/deploy-date: \u003ctimestamp\u003e` annotation into pod specification for StateFulset. This\nensures that the Pod is recreated with the new changes.\n\nFeel free to disable this but doing so **IS IT YOUR OWN RISK**. By disabling this feature\nyou might run into issues where some changes are not reflected on the Pod. If you experience\nthis with this setting set to `false` the first thing to try out is to restart / delete\na pod and let `StatefulSet` recreate it.\nWhether to recreate pods on every deploy",
          "required": [],
          "title": "recreateOnRedeploy",
          "type": "boolean"
        },
        "replicaCount": {
          "default": 1,
          "description": "Number of replicas to run",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": false,
          "default": {},
          "description": "Resource requests and limits for the container",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "secret": {
          "additionalProperties": false,
          "default": {},
          "description": "Data to be stored in a Secret and shared with the pod as environment variables",
          "required": [],
          "title": "secret",
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "description": "Kubernetes Service configuration",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "default": {},
              "description": "Additional annotations for the service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": false,
              "default": {},
              "description": "Additional labels for the service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "port": {
              "default": 587,
              "description": "Kubernetes Service port",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Kubernetes Service type",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ],
              "required": [],
              "title": "type"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": false,
          "description": "Service account configuration",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "default": {},
              "description": "Annotations to add to the service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [],
          "title": "serviceAccount",
          "type": "object"
        },
        "startupProbe": {
          "additionalProperties": true,
          "description": "Startup probe configuration",
          "properties": {
            "exec": {
              "additionalProperties": false,
              "properties": {
                "command": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      },
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "command",
                  "type": "array"
                }
              },
              "required": [],
              "title": "exec",
              "type": "object"
            },
            "failureThreshold": {
              "default": 12,
              "required": [],
              "title": "failureThreshold",
              "type": "integer"
            },
            "initialDelaySeconds": {
              "default": 5,
              "required": [],
              "title": "initialDelaySeconds",
              "type": "integer"
            },
            "periodSeconds": {
              "default": 5,
              "required": [],
              "title": "periodSeconds",
              "type": "integer"
            }
          },
          "required": [],
          "title": "startupProbe",
          "type": "object"
        },
        "tolerations": {
          "default": [],
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        }
      },
      "required": [],
      "title": "mail",
      "type": "object"
    },
    "nameOverride": {
      "default": "keycloak",
      "description": "String to partially override the fullname template with a string (will prepend the release name)",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "additionalProperties": false,
      "description": "Node labels for pod assignment",
      "required": [],
      "title": "nodeSelector",
      "type": [
        "object",
        "null"
      ]
    },
    "oauthProxy": {
      "additionalProperties": false,
      "description": "OAuth2 Proxy configuration for authentication",
      "properties": {
        "affinity": {
          "additionalProperties": false,
          "description": "Map of node/pod affinities for OAuth2 Proxy",
          "properties": {
            "nodeAffinity": {
              "additionalProperties": false,
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "preference": {
                            "additionalProperties": false,
                            "properties": {
                              "matchExpressions": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "key": {
                                          "default": "sas.com/deployment",
                                          "required": [],
                                          "title": "key",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "default": "In",
                                          "required": [],
                                          "title": "operator",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "anyOf": [
                                              {
                                                "required": [],
                                                "type": "string"
                                              }
                                            ],
                                            "required": []
                                          },
                                          "required": [],
                                          "title": "values",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator",
                                        "values"
                                      ],
                                      "type": "object"
                                    }
                                  ],
                                  "required": []
                                },
                                "required": [],
                                "title": "matchExpressions",
                                "type": "array"
                              }
                            },
                            "required": [
                              "matchExpressions"
                            ],
                            "title": "preference",
                            "type": "object"
                          },
                          "weight": {
                            "default": 1,
                            "required": [],
                            "title": "weight",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "weight",
                          "preference"
                        ],
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "preference": {
                            "additionalProperties": false,
                            "properties": {
                              "matchExpressions": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "additionalProperties": false,
                                      "properties": {
                                        "key": {
                                          "default": "workload.sas.com/class",
                                          "required": [],
                                          "title": "key",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "default": "In",
                                          "required": [],
                                          "title": "operator",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "anyOf": [
                                              {
                                                "required": [],
                                                "type": "string"
                                              }
                                            ],
                                            "required": []
                                          },
                                          "required": [],
                                          "title": "values",
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator",
                                        "values"
                                      ],
                                      "type": "object"
                                    }
                                  ],
                                  "required": []
                                },
                                "required": [],
                                "title": "matchExpressions",
                                "type": "array"
                              }
                            },
                            "required": [
                              "matchExpressions"
                            ],
                            "title": "preference",
                            "type": "object"
                          },
                          "weight": {
                            "default": 2,
                            "required": [],
                            "title": "weight",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "weight",
                          "preference"
                        ],
                        "type": "object"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "preferredDuringSchedulingIgnoredDuringExecution",
                  "type": "array"
                }
              },
              "required": [
                "preferredDuringSchedulingIgnoredDuringExecution"
              ],
              "title": "nodeAffinity",
              "type": "object"
            }
          },
          "required": [
            "nodeAffinity"
          ],
          "title": "affinity",
          "type": [
            "object",
            "null"
          ]
        },
        "autoscaling": {
          "additionalProperties": false,
          "description": "Horizontal Pod Autoscaler configuration for OAuth2 Proxy",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "type": "boolean"
            },
            "maxReplicas": {
              "default": 100,
              "format": "int32",
              "required": [],
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "format": "int32",
              "required": [],
              "type": "integer"
            },
            "targetCPUUtilizationPercentage": {
              "default": 80,
              "format": "int32",
              "required": [],
              "type": "integer"
            },
            "targetMemoryUtilizationPercentage": {
              "default": 80,
              "format": "int32",
              "required": [],
              "type": "integer"
            }
          },
          "required": [],
          "title": "autoscaling",
          "type": [
            "object",
            "null"
          ]
        },
        "fullnameOverride": {
          "default": "sas-retrieval-agent-manager-oauth2-proxy",
          "description": "String to fully override the OAuth2 Proxy fullname template",
          "required": [],
          "title": "fullnameOverride",
          "type": "string"
        },
        "image": {
          "additionalProperties": false,
          "description": "OAuth2 Proxy container image configuration",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image pull policy for OAuth2 Proxy container",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repo": {
              "additionalProperties": false,
              "properties": {
                "base": {
                  "default": "quay.io",
                  "description": "Container registry base URL for OAuth2 Proxy",
                  "required": [],
                  "title": "base",
                  "type": "string"
                },
                "path": {
                  "default": "oauth2-proxy/oauth2-proxy",
                  "description": "Container image path/name for OAuth2 Proxy",
                  "required": [],
                  "title": "path",
                  "type": "string"
                }
              },
              "required": [
                "base",
                "path"
              ],
              "title": "repo",
              "type": "object"
            },
            "tag": {
              "default": "v7.12.0",
              "description": "OAuth2 Proxy container image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repo",
            "tag"
          ],
          "title": "image",
          "type": "object"
        },
        "imagePullSecrets": {
          "default": [
            {
              "name": "cr-sas-secret"
            }
          ],
          "description": "Array of imagePullSecrets for OAuth2 Proxy",
          "items": {
            "properties": {
              "name": {
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "ingress": {
          "additionalProperties": false,
          "description": "OAuth2 Proxy ingress configuration",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "default": {
                "kubernetes.io/ingress.allow-http": "false",
                "nginx.ingress.kubernetes.io/enable-cors": "true",
                "nginx.ingress.kubernetes.io/proxy-buffer-size": "16k",
                "nginx.ingress.kubernetes.io/session-cookie-samesite": "lax",
                "nginx.ingress.kubernetes.io/ssl-redirect": "true"
              },
              "description": "Annotations for the OAuth2 Proxy Ingress",
              "properties": {
                "kubernetes.io/ingress.allow-http": {
                  "default": "false",
                  "description": "Disallow HTTP traffic, force HTTPS only",
                  "required": [],
                  "title": "kubernetes.io/ingress.allow-http",
                  "type": "string"
                },
                "nginx.ingress.kubernetes.io/enable-cors": {
                  "default": "true",
                  "description": "Enable CORS for OAuth2 Proxy",
                  "required": [],
                  "title": "nginx.ingress.kubernetes.io/enable-cors",
                  "type": "string"
                },
                "nginx.ingress.kubernetes.io/proxy-buffer-size": {
                  "default": "16k",
                  "description": "Size of buffer used for reading the first part of response",
                  "required": [],
                  "title": "nginx.ingress.kubernetes.io/proxy-buffer-size",
                  "type": "string"
                },
                "nginx.ingress.kubernetes.io/session-cookie-samesite": {
                  "default": "lax",
                  "description": "Session cookie SameSite attribute",
                  "required": [],
                  "title": "nginx.ingress.kubernetes.io/session-cookie-samesite",
                  "type": "string"
                },
                "nginx.ingress.kubernetes.io/ssl-redirect": {
                  "default": "true",
                  "description": "Force SSL redirect",
                  "required": [],
                  "title": "nginx.ingress.kubernetes.io/ssl-redirect",
                  "type": "string"
                }
              },
              "required": [
                "kubernetes.io/ingress.allow-http",
                "nginx.ingress.kubernetes.io/proxy-buffer-size",
                "nginx.ingress.kubernetes.io/ssl-redirect",
                "nginx.ingress.kubernetes.io/enable-cors",
                "nginx.ingress.kubernetes.io/session-cookie-samesite"
              ],
              "title": "annotations",
              "type": "object"
            },
            "className": {
              "default": "nginx",
              "description": "Class name of the OAuth2 Proxy Ingress",
              "required": [],
              "title": "className",
              "type": "string"
            },
            "enabled": {
              "default": true,
              "description": "Enable ingress for OAuth2 Proxy",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "hosts": {
              "description": "Hosts configuration for OAuth2 Proxy (ignored if useGlobal is true)",
              "items": {
                "properties": {
                  "host": {
                    "required": [],
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "properties": {
                        "path": {
                          "default": "/SASRetrievalAgentManager/auth(/(realms|resources)/(.*))$",
                          "required": [],
                          "type": "string"
                        },
                        "pathType": {
                          "default": "ImplementationSpecific",
                          "required": [],
                          "type": "string"
                        }
                      },
                      "required": [],
                      "type": "object"
                    },
                    "required": [],
                    "type": [
                      "array",
                      "null"
                    ]
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "hosts",
              "type": [
                "array",
                "null"
              ]
            },
            "logoutPaths": {
              "default": [
                {
                  "path": "/SASRetrievalAgentManager/logout(/(.*))?$",
                  "pathType": "ImplementationSpecific"
                }
              ],
              "description": "OAuth2 logout paths",
              "items": {
                "properties": {
                  "path": {
                    "default": "/SASRetrievalAgentManager/logout(/(.*))?$",
                    "required": [],
                    "type": "string"
                  },
                  "pathType": {
                    "default": "ImplementationSpecific",
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "logoutPaths",
              "type": [
                "array",
                "null"
              ]
            },
            "paths": {
              "default": [
                {
                  "path": "/SASRetrievalAgentManager/oauth2(/|/(.*))$",
                  "pathType": "ImplementationSpecific"
                }
              ],
              "description": "OAuth2 authentication paths",
              "items": {
                "properties": {
                  "path": {
                    "default": "/SASRetrievalAgentManager/oauth2(/|/(.*))$",
                    "required": [],
                    "type": "string"
                  },
                  "pathType": {
                    "default": "ImplementationSpecific",
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "paths",
              "type": [
                "array",
                "null"
              ]
            },
            "tls": {
              "default": [
                {
                  "path": "/SASRetrievalAgentManager/auth(/(realms|resources)/(.*))$",
                  "pathType": "ImplementationSpecific"
                }
              ],
              "description": "TLS configuration for OAuth2 Proxy ingress",
              "items": {
                "properties": {
                  "hosts": {
                    "items": {
                      "required": [],
                      "type": "string"
                    },
                    "required": [],
                    "type": "array"
                  },
                  "secretName": {
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "tls",
              "type": [
                "array",
                "null"
              ]
            },
            "useGlobal": {
              "default": false,
              "description": "Use global ingress configuration instead of local hosts for OAuth2 Proxy",
              "required": [],
              "title": "useGlobal",
              "type": "boolean"
            }
          },
          "required": [
            "useGlobal",
            "enabled",
            "className"
          ],
          "title": "ingress",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Liveness probe configuration for OAuth2 Proxy",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "description": "HTTP GET probe configuration for liveness",
              "properties": {
                "path": {
                  "default": "/ping",
                  "description": "Path to probe for liveness",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "livenessProbe",
          "type": [
            "object",
            "null"
          ]
        },
        "nameOverride": {
          "default": "oauth2-proxy",
          "description": "String to partially override the OAuth2 Proxy fullname template",
          "required": [],
          "title": "nameOverride",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": false,
          "description": "Node labels for OAuth2 Proxy pod assignment",
          "required": [],
          "title": "nodeSelector",
          "type": [
            "object",
            "null"
          ]
        },
        "podAnnotations": {
          "additionalProperties": false,
          "default": {},
          "description": "Annotations to add to the OAuth2 Proxy pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": false,
          "default": {
            "sas.com/deployment": "sas-retrieval-agent-manager",
            "workload.sas.com/class": "ram"
          },
          "description": "Labels to add to the OAuth2 Proxy pods",
          "properties": {
            "sas.com/deployment": {
              "default": "sas-retrieval-agent-manager",
              "required": [],
              "title": "sas.com/deployment",
              "type": "string"
            },
            "workload.sas.com/class": {
              "default": "ram",
              "required": [],
              "title": "workload.sas.com/class",
              "type": "string"
            }
          },
          "required": [
            "sas.com/deployment",
            "workload.sas.com/class"
          ],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": false,
          "default": {
            "fsGroup": 10001,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001,
            "seccompProfile": {
              "type": "RuntimeDefault"
            }
          },
          "description": "The security context for the OAuth2 Proxy pods",
          "properties": {
            "appArmorProfile": {
              "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.",
              "properties": {
                "localhostProfile": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "Localhost",
                    "RuntimeDefault"
                  ],
                  "required": []
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "fsGroup": {
              "default": 10001,
              "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\\n\\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\\n\\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "fsGroupChangePolicy": {
              "default": "Always",
              "enum": [
                "OnRootMismatch",
                "Always"
              ],
              "required": []
            },
            "runAsGroup": {
              "default": 10001,
              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "runAsNonRoot": {
              "default": true,
              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "required": [],
              "type": [
                "boolean",
                "null"
              ]
            },
            "runAsUser": {
              "default": 10001,
              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "seLinuxOptions": {
              "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "properties": {
                "level": {
                  "required": [],
                  "type": "string"
                },
                "role": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "required": [],
                  "type": "string"
                },
                "user": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "seccompProfile": {
              "description": "The seccomp options to use by the containers in this pod.",
              "properties": {
                "localhostProfile": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "Localhost",
                    "RuntimeDefault"
                  ],
                  "required": []
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "supplementalGroups": {
              "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID and fsGroup (if specified).  If the SupplementalGroupsPolicy feature is enabled, the supplementalGroupsPolicy field determines whether these are in addition to or instead of any group memberships defined in the container image. If unspecified, no additional groups are added, though group memberships defined in the container image may still be used, depending on the supplementalGroupsPolicy field.",
              "items": {
                "format": "int64",
                "required": [],
                "type": [
                  "integer",
                  "null"
                ]
              },
              "required": [],
              "type": [
                "array",
                "null"
              ]
            },
            "supplementalGroupsPolicy": {
              "default": "Merge",
              "description": "Defines how supplemental groups of the first container processes are calculated. Valid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used. (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled and the container runtime must implement support for this feature.",
              "enum": [
                "Merge",
                "Strict"
              ],
              "required": []
            },
            "sysctls": {
              "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
              "items": {
                "properties": {
                  "name": {
                    "required": [],
                    "type": "string"
                  },
                  "value": {
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "type": [
                "array",
                "null"
              ]
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": [
            "object",
            "null"
          ]
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe configuration for OAuth2 Proxy",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "description": "HTTP GET probe configuration for readiness",
              "properties": {
                "path": {
                  "default": "/ping",
                  "description": "Path to probe for readiness",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "readinessProbe",
          "type": [
            "object",
            "null"
          ]
        },
        "replicaCount": {
          "default": 1,
          "description": "Number of OAuth2 Proxy replicas",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": false,
          "description": "The resources to allocate for the OAuth2 Proxy container",
          "properties": {
            "claims": {
              "items": {
                "properties": {
                  "name": {
                    "required": [],
                    "type": "string"
                  },
                  "request": {
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "type": "array"
            },
            "limits": {
              "required": [],
              "type": "object"
            },
            "requests": {
              "required": [],
              "type": "object"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": false,
          "default": {
            "allowPrivilegeEscalation": false,
            "capabilities": {
              "add": [],
              "drop": [
                "ALL"
              ]
            },
            "privileged": false,
            "readOnlyRootFilesystem": true,
            "runAsGroup": 10001,
            "runAsNonRoot": true,
            "runAsUser": 10001,
            "seccompProfile": {
              "type": "RuntimeDefault"
            }
          },
          "description": "The security context for the OAuth2 Proxy application container",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is run as Privileged or has CAP_SYS_ADMIN",
              "required": [],
              "type": "boolean"
            },
            "appArmorProfile": {
              "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile.",
              "properties": {
                "localhostProfile": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "Localhost",
                    "RuntimeDefault"
                  ],
                  "required": []
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "capabilities": {
              "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
              "properties": {
                "add": {
                  "default": [],
                  "description": "Added capabilities",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "type": [
                    "array",
                    "null"
                  ]
                },
                "drop": {
                  "default": [
                    "ALL"
                  ],
                  "description": "Dropped capabilities",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "type": [
                    "array",
                    "null"
                  ]
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "privileged": {
              "default": false,
              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host.",
              "required": [],
              "type": [
                "boolean",
                "null"
              ]
            },
            "procMount": {
              "description": "procMount denotes the type of proc mount to use for the containers. The default value is Default which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
              "required": [],
              "type": [
                "string",
                "null"
              ]
            },
            "readOnlyRootFilesystem": {
              "default": false,
              "description": "Whether this container has a read-only root filesystem. Default is false.",
              "required": [],
              "type": [
                "boolean",
                "null"
              ]
            },
            "runAsGroup": {
              "default": 10001,
              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "runAsNonRoot": {
              "default": true,
              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "required": [],
              "type": [
                "boolean",
                "null"
              ]
            },
            "runAsUser": {
              "default": 10001,
              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "format": "int64",
              "required": [],
              "type": [
                "integer",
                "null"
              ]
            },
            "seLinuxOptions": {
              "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
              "properties": {
                "level": {
                  "required": [],
                  "type": "string"
                },
                "role": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "required": [],
                  "type": "string"
                },
                "user": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            },
            "seccompProfile": {
              "description": "The seccomp options to use by the containers in this pod.",
              "properties": {
                "localhostProfile": {
                  "required": [],
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "Localhost",
                    "RuntimeDefault"
                  ],
                  "required": []
                }
              },
              "required": [],
              "type": [
                "object",
                "null"
              ]
            }
          },
          "required": [],
          "title": "securityContext",
          "type": [
            "object",
            "null"
          ]
        },
        "service": {
          "additionalProperties": false,
          "description": "OAuth2 Proxy service configuration",
          "properties": {
            "port": {
              "default": 8080,
              "description": "The port that will be exposed by this service.",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Service type must be one of ClusterIP, NodePort, or LoadBalancer.",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ],
              "required": [],
              "title": "type"
            }
          },
          "required": [
            "type",
            "port"
          ],
          "title": "service",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": false,
          "description": "OAuth2 Proxy service account configuration",
          "properties": {
            "annotations": {
              "additionalProperties": false,
              "default": {},
              "description": "Annotations to add to the OAuth2 Proxy service account",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "automount": {
              "default": true,
              "description": "Automatically mount a ServiceAccount's API credentials for OAuth2 Proxy",
              "required": [],
              "title": "automount",
              "type": "boolean"
            },
            "create": {
              "default": true,
              "description": "Specifies whether a service account should be created for OAuth2 Proxy",
              "required": [],
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "",
              "description": "The name of the service account to use for OAuth2 Proxy",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "create",
            "automount"
          ],
          "title": "serviceAccount",
          "type": "object"
        },
        "tolerations": {
          "description": "Tolerations for OAuth2 Proxy pod assignment",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tolerations",
          "type": [
            "array",
            "null"
          ]
        },
        "volumeMounts": {
          "description": "Additional volumeMounts on the OAuth2 Proxy Deployment definition",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumeMounts",
          "type": [
            "array",
            "null"
          ]
        },
        "volumes": {
          "description": "Additional volumes on the OAuth2 Proxy Deployment definition",
          "items": {
            "required": []
          },
          "required": [],
          "title": "volumes",
          "type": [
            "array",
            "null"
          ]
        }
      },
      "required": [
        "nameOverride",
        "fullnameOverride",
        "replicaCount",
        "service",
        "serviceAccount",
        "ingress",
        "image",
        "livenessProbe",
        "readinessProbe",
        "resources",
        "autoscaling"
      ],
      "title": "oauthProxy",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "default": {},
      "description": "Annotations to add to the pods",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": true,
      "default": {
        "sas.com/deployment": "sas-retrieval-agent-manager",
        "workload.sas.com/class": "ram"
      },
      "description": "Labels to add to the pods",
      "properties": {
        "sas.com/deployment": {
          "default": "sas-retrieval-agent-manager",
          "required": [],
          "title": "sas.com/deployment",
          "type": "string"
        },
        "workload.sas.com/class": {
          "default": "ram",
          "required": [],
          "title": "workload.sas.com/class",
          "type": "string"
        }
      },
      "required": [
        "sas.com/deployment",
        "workload.sas.com/class"
      ],
      "title": "podLabels",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": false,
      "default": {
        "fsGroup": 10001,
        "runAsGroup": 10001,
        "runAsNonRoot": true,
        "runAsUser": 10001,
        "seccompProfile": {
          "type": "RuntimeDefault"
        }
      },
      "description": "The security context for the pods",
      "properties": {
        "appArmorProfile": {
          "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.",
          "properties": {
            "localhostProfile": {
              "required": [],
              "type": "string"
            },
            "type": {
              "enum": [
                "Localhost",
                "RuntimeDefault"
              ],
              "required": []
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "fsGroup": {
          "default": 10001,
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\\n\\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\\n\\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.",
          "format": "int64",
          "required": [],
          "type": [
            "integer",
            "null"
          ]
        },
        "fsGroupChangePolicy": {
          "default": "Always",
          "enum": [
            "OnRootMismatch",
            "Always"
          ],
          "required": []
        },
        "runAsGroup": {
          "default": 10001,
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64",
          "required": [],
          "type": [
            "integer",
            "null"
          ]
        },
        "runAsNonRoot": {
          "default": true,
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "required": [],
          "type": [
            "boolean",
            "null"
          ]
        },
        "runAsUser": {
          "default": 10001,
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64",
          "required": [],
          "type": [
            "integer",
            "null"
          ]
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "properties": {
            "level": {
              "required": [],
              "type": "string"
            },
            "role": {
              "required": [],
              "type": "string"
            },
            "type": {
              "required": [],
              "type": "string"
            },
            "user": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "seccompProfile": {
          "description": "The seccomp options to use by the containers in this pod.",
          "properties": {
            "localhostProfile": {
              "required": [],
              "type": "string"
            },
            "type": {
              "enum": [
                "Localhost",
                "RuntimeDefault"
              ],
              "required": []
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "supplementalGroups": {
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID and fsGroup (if specified).  If the SupplementalGroupsPolicy feature is enabled, the supplementalGroupsPolicy field determines whether these are in addition to or instead of any group memberships defined in the container image. If unspecified, no additional groups are added, though group memberships defined in the container image may still be used, depending on the supplementalGroupsPolicy field.",
          "items": {
            "format": "int64",
            "required": [],
            "type": [
              "integer",
              "null"
            ]
          },
          "required": [],
          "type": [
            "array",
            "null"
          ]
        },
        "supplementalGroupsPolicy": {
          "default": "Merge",
          "description": "Defines how supplemental groups of the first container processes are calculated. Valid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used. (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled and the container runtime must implement support for this feature.",
          "enum": [
            "Merge",
            "Strict"
          ],
          "required": []
        },
        "sysctls": {
          "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.",
          "items": {
            "properties": {
              "name": {
                "required": [],
                "type": "string"
              },
              "value": {
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "type": [
            "array",
            "null"
          ]
        }
      },
      "required": [],
      "title": "podSecurityContext",
      "type": [
        "object",
        "null"
      ]
    },
    "readinessProbe": {
      "additionalProperties": true,
      "description": "Readiness probe configuration for Keycloak",
      "properties": {
        "failureThreshold": {
          "default": 5,
          "description": "Number of consecutive failures required to mark container as not ready",
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "httpGet": {
          "additionalProperties": false,
          "description": "HTTP GET probe configuration",
          "properties": {
            "path": {
              "default": "/SASRetrievalAgentManager/auth/realms/master",
              "description": "Path to probe for readiness",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": "http",
              "required": [],
              "title": "port",
              "type": "string"
            }
          },
          "required": [
            "path",
            "port"
          ],
          "title": "httpGet",
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 240,
          "description": "Initial delay before starting probes",
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 30,
          "description": "How often to perform the probe",
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        }
      },
      "required": [
        "failureThreshold",
        "httpGet",
        "initialDelaySeconds",
        "periodSeconds"
      ],
      "title": "readinessProbe",
      "type": [
        "object",
        "null"
      ]
    },
    "replicaCount": {
      "default": 1,
      "description": "Number of replicas to run. Chart is not designed to scale horizontally, use at your own risk",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": false,
      "description": "The resources to allocate for the Keycloak container",
      "properties": {
        "claims": {
          "items": {
            "properties": {
              "name": {
                "required": [],
                "type": "string"
              },
              "request": {
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "type": "array"
        },
        "limits": {
          "required": [],
          "type": "object"
        },
        "requests": {
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": false,
      "default": {
        "allowPrivilegeEscalation": false,
        "capabilities": {
          "add": [],
          "drop": [
            "ALL"
          ]
        },
        "privileged": false,
        "readOnlyRootFilesystem": true,
        "runAsGroup": 10001,
        "runAsNonRoot": true,
        "runAsUser": 10001,
        "seccompProfile": {
          "type": "RuntimeDefault"
        }
      },
      "description": "The security context for the application container",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is run as Privileged or has CAP_SYS_ADMIN",
          "required": [],
          "type": "boolean"
        },
        "appArmorProfile": {
          "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile.",
          "properties": {
            "localhostProfile": {
              "required": [],
              "type": "string"
            },
            "type": {
              "enum": [
                "Localhost",
                "RuntimeDefault"
              ],
              "required": []
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "capabilities": {
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
          "properties": {
            "add": {
              "default": [],
              "description": "Added capabilities",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "type": [
                "array",
                "null"
              ]
            },
            "drop": {
              "default": [
                "ALL"
              ],
              "description": "Dropped capabilities",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "type": [
                "array",
                "null"
              ]
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "privileged": {
          "default": false,
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host.",
          "required": [],
          "type": [
            "boolean",
            "null"
          ]
        },
        "procMount": {
          "description": "procMount denotes the type of proc mount to use for the containers. The default value is Default which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
          "required": [],
          "type": [
            "string",
            "null"
          ]
        },
        "readOnlyRootFilesystem": {
          "default": false,
          "description": "Whether this container has a read-only root filesystem. Default is false.",
          "required": [],
          "type": [
            "boolean",
            "null"
          ]
        },
        "runAsGroup": {
          "default": 10001,
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64",
          "required": [],
          "type": [
            "integer",
            "null"
          ]
        },
        "runAsNonRoot": {
          "default": true,
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "required": [],
          "type": [
            "boolean",
            "null"
          ]
        },
        "runAsUser": {
          "default": 10001,
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "format": "int64",
          "required": [],
          "type": [
            "integer",
            "null"
          ]
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
          "properties": {
            "level": {
              "required": [],
              "type": "string"
            },
            "role": {
              "required": [],
              "type": "string"
            },
            "type": {
              "required": [],
              "type": "string"
            },
            "user": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        },
        "seccompProfile": {
          "description": "The seccomp options to use by the containers in this pod.",
          "properties": {
            "localhostProfile": {
              "required": [],
              "type": "string"
            },
            "type": {
              "enum": [
                "Localhost",
                "RuntimeDefault"
              ],
              "required": []
            }
          },
          "required": [],
          "type": [
            "object",
            "null"
          ]
        }
      },
      "required": [],
      "title": "securityContext",
      "type": [
        "object",
        "null"
      ]
    },
    "service": {
      "additionalProperties": false,
      "description": "Kubernetes Service configuration",
      "properties": {
        "port": {
          "default": 8080,
          "description": "The port that will be exposed by this service.",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Service type must be one of ClusterIP, NodePort, or LoadBalancer.",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer"
          ],
          "required": [],
          "title": "type"
        }
      },
      "required": [
        "type",
        "port"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "description": "Service account configuration for Keycloak",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "default": {},
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automount": {
          "default": true,
          "description": "Automatically mount a ServiceAccount's API credentials",
          "required": [],
          "title": "automount",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "automount"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "tolerations": {
      "description": "Tolerations for pod assignment",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": [
        "array",
        "null"
      ]
    },
    "volumeMounts": {
      "description": "Additional volumeMounts on the output Deployment definition",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumeMounts",
      "type": [
        "array",
        "null"
      ]
    },
    "volumes": {
      "description": "Additional volumes on the output Deployment definition",
      "items": {
        "required": []
      },
      "required": [],
      "title": "volumes",
      "type": [
        "array",
        "null"
      ]
    }
  },
  "required": [
    "replicaCount",
    "image",
    "nameOverride",
    "fullnameOverride",
    "serviceAccount",
    "service",
    "ingress",
    "resources",
    "livenessProbe",
    "readinessProbe",
    "autoscaling",
    "oauthProxy",
    "global"
  ],
  "type": "object"
}