apiVersion: v1
kind: Secret
metadata:
  name: keycloak-realm-secret
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
stringData:
  realm-export.json: |-
    {
      "users": [
        {
          "username": "${APP_ADMIN}",
          "enabled": true,
          "email": "${APP_ADMIN}@sasiot",
          "firstName": "Application",
          "lastName": "Main Admin",
          "emailVerified": true,
          "credentials": [
            {
              "type": "password",
              "value": "${APP_ADMIN_PASSWORD}"
            }
          ],
          "realmRoles": [
            "user"
          ],
          "groups" : [ "/Admin" ]
        }
      ],
      "groups": [
        {
          "name": "Admin",
          "path": "/Admin",
          "attributes": {},
          "realmRoles": [
            "offline_access"
          ],
          "clientRoles": {
            "realm-management": [
              "query-groups",
              "manage-realm",
              "query-users",
              "manage-events",
              "view-realm",
              "manage-users"
            ],
            "account": [
              "manage-account"
            ],

            "${OAUTH2_PROXY_CLIENT_ID}": [
              "${KC_OAUTH2_ADMIN_ROLE}"
            ]
          },
          "subGroups": []
        },
        {
          "name": "User",
          "path": "/User",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {
            "${OAUTH2_PROXY_CLIENT_ID}": [
              "${KC_OAUTH2_USER_ROLE}"
            ]
          },
          "subGroups": []
        }
      ],
      "roles": {
        "client": {
          "${OAUTH2_PROXY_CLIENT_ID}": [
            {
              "name": "${KC_OAUTH2_ADMIN_ROLE}",
              "description": "Admin role for SAS Application.",
              "composite": false,
              "clientRole": true,
              "attributes": {}
            },
            {
              "name": "${KC_OAUTH2_USER_ROLE}",
              "description": "Default user role for SAS Application.",
              "composite": false,
              "clientRole": true,
              "attributes": {}
            }
          ]
        }
      },
      "clients": [
        {
          "attributes": {
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "oidc.ciba.grant.enabled": "false",
            "use.refresh.tokens": "true"
          },
          "bearerOnly": false,
          "clientAuthenticatorType": "client-secret",
          "clientId": "${OAUTH2_PROXY_CLIENT_ID}",
          "consentRequired": false,
          "directAccessGrantsEnabled": true,
          "enabled": true,
          "frontchannelLogout": false,
          "fullScopeAllowed": true,
          "implicitFlowEnabled": false,
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "config": {
                "access.token.claim": "true",
                "claim.name": "groups",
                "full.path": "true",
                "id.token.claim": "true",
                "userinfo.token.claim": "true"
              },
              "consentRequired": false,
              "name": "KeycloakOIDC",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-group-membership-mapper"
            },
            {
              "config": {
                "access.token.claim": "true",
                "id.token.claim": "false",
                "included.client.audience": "${OAUTH2_PROXY_CLIENT_ID}",
                "included.custom.audience": "${OAUTH2_PROXY_CLIENT_ID}"
              },
              "consentRequired": false,
              "name": "KeycloakOIDCaudience",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper"
            },
            {
            "name": "UserInfoClientRoles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "claim.name": "client_roles.${client_id}",
              "jsonType.label": "String",
              "multivalued": "true",
              "access.token.claim": "false",
              "userinfo.token.claim": "true",
              "id.token.claim": "false"  }
            },
            {
            "name": "IDTokenClientRoles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true",
              "access.token.claim": "false",
              "userinfo.token.claim": "false",
              "id.token.claim": "true"  }
            }
          ],
          "publicClient": false,
          "redirectUris": [
            "https://${KC_FQDN}/*"
          ],
          "rootUrl": "https://${KC_FQDN}",
          "secret": "${OAUTH2_PROXY_CLIENT_SECRET}",
          "serviceAccountsEnabled": ${KC_REALM_CLIENT_SERVICEACCOUNTSENABLED},
          "standardFlowEnabled": true,
          "webOrigins": [
            "https://${KC_FQDN}"
          ]
        }
      ],
      "resetPasswordAllowed": {{ .Values.mail.enabled }},
      "passwordPolicy": "hashAlgorithm(argon2) and hashIterations(-1) and length(8) and upperCase(1) and lowerCase(1) and digits(1) and specialChars(1) and notContainsUsername(undefined) and notEmail(undefined)",
      "realm": "${KC_REALM_NAME}",
      "displayName": "SAS Applications",
      "defaultLocale": "en",
      "defaultSignatureAlgorithm": "ES256",
      "enabled": true,
      "loginTheme": "${KC_THEME_NAME}",
      "adminTheme": "${KC_THEME_NAME}",
      "sslRequired": "external",
      "userManagedAccessAllowed": false,
      {{- if .Values.mail.enabled }}
      "smtpServer": {
        "starttls": "false",
        "port": "587",
        "host": "mail.${KC_NS}.svc.cluster.local",
        "from": "noreply@${KC_FQDN}",
        "fromDisplayName": "Keycloak Retagentmgr No Reply",
        "ssl": "false"
      },
      {{- end }}
      "defaultGroups": []
    }
