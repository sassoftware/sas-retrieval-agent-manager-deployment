{{- $dot := . -}}
{{- $globalEnabled := false -}}
{{- if hasKey .Values "global" -}}
{{- if hasKey .Values.global "ingress" -}}
{{- if .Values.global.ingress.enabled -}}
{{- $globalEnabled = true -}}
{{- end -}}
{{- end -}}
{{- end -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "keycloak.oauthProxy.fullname" . | lower }}
  labels:
    {{- include "keycloak.oauthProxy.labels" . | nindent 4 }}
data:
  oauth2-proxy.cfg: |
    http_address              = "0.0.0.0:{{ .Values.oauthProxy.service.port }}"
    upstreams                 = "file:///dev/null"
    reverse_proxy             = true
    ssl_insecure_skip_verify  = false

    # Provider Configuration
    provider                = "oidc"
    skip_provider_button    = true
    skip_jwt_bearer_tokens  = true
    code_challenge_method   = "S256"

    redirect_url            = "{{ include "keycloak.oauthProxy.ingressURL" . }}/callback"
    oidc_issuer_url         = "{{ include "keycloak.ingressURL" . }}"
    login_url               = "{{ include "keycloak.ingressURL" . }}/protocol/openid-connect/auth"
    whitelist_domains       = "{{ include "keycloak.oauthProxy.domain" . }}"
    proxy_prefix            = "{{ include "keycloak.oauthProxy.prefix" . }}"
    email_domains           = "*"

    # Skip OIDC discovery and provide internal URLs directly.
    # If OIDC discovery is not skipped, external URLs returned from the .well-known endpoint
    # will be used. These may not be reachable from within the cluster.
    skip_oidc_discovery = true
    oidc_jwks_url       = "{{ include "keycloak.internalURL" . }}/protocol/openid-connect/certs"
    redeem_url          = "{{ include "keycloak.internalURL" . }}/protocol/openid-connect/token"
    validate_url        = "{{ include "keycloak.internalURL" . }}/protocol/openid-connect/userinfo"

    # Cookie Configuration
    cookie_name     = "esp_oauth2_proxy"
    cookie_expire   = "12h"
    cookie_refresh  = "60s"    
    cookie_secure   = true
    {{ if $globalEnabled -}}
    cookie_domains  = [
      "{{ .Values.global.domain }}",
      "{{ include "keycloak.oauthProxy.fullname" . | lower }}.{{ .Release.Namespace }}.svc.cluster.local",
    ]
    {{- else -}}
    cookie_domains  = [
      "{{ with (first .Values.oauthProxy.ingress.hosts) }}{{ .host }}{{ end }}",
      "{{ include "keycloak.oauthProxy.fullname" . | lower }}.{{ .Release.Namespace }}.svc.cluster.local"
    ]
    {{- end }}
    cookie_samesite = "lax"
    cookie_csrf_per_request = true

    # Auth Response Headers
    set_authorization_header  = true
    set_xauthrequest          = true
    pass_access_token         = true

    # bypass authentication for requests that match the method & path. Format: method=path_regex OR path_regex alone for all methods
    # skip_auth_routes = [
    #   "GET=^/$"
    # ]
