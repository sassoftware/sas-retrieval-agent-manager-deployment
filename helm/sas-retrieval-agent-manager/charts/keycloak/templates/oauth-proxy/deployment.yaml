{{- $oauthProxy_repo_base := "" -}}
{{- $kubectl_repo_base := "" -}}
{{- if and (hasKey .Values "global") (hasKey .Values.global "image") (hasKey .Values.global.image "repo") (hasKey .Values.global.image.repo "base") -}}
  {{- $oauthProxy_repo_base = .Values.global.image.repo.base | default .Values.oauthProxy.image.repo.base -}}
  {{- $kubectl_repo_base = .Values.global.image.repo.base | default .Values.image.kubectl.repo.base -}}
{{- else -}}
  {{- $oauthProxy_repo_base = .Values.oauthProxy.image.repo.base -}}
  {{- $kubectl_repo_base = .Values.image.kubectl.repo.base -}}
{{- end -}}
{{- $globalEnabled := false }}
{{- if hasKey .Values "global" }}
{{- if hasKey .Values.global "ingress" }}
{{- if .Values.global.ingress.enabled }}
{{- $globalEnabled = true }}
{{- end }}
{{- end }}
{{- end }}
{{- $oAuthProxyPath := "" -}}
{{- if $globalEnabled }}
{{- $oAuthProxyPath = regexReplaceAll "\\(.*" (first .Values.oauthProxy.ingress.paths).path "" }}
{{- else }}
{{- if (len .Values.oauthProxy.ingress.hosts) }}
{{- $oAuthProxyPath = regexReplaceAll "\\(.*" (first (first .Values.oauthProxy.ingress.hosts).paths).path "" }}
{{- end }}
{{- end }}
{{- $keycloakPath := "" -}}
{{- if $globalEnabled }}
{{- $keycloakPath = regexReplaceAll "\\(.*" (first .Values.ingress.paths).path "" }}
{{- else }}
{{- if (len .Values.ingress.hosts) }}
{{- $keycloakPath = regexReplaceAll "\\(.*" (first (first .Values.ingress.hosts).paths).path "" }}
{{- end }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keycloak.oauthProxy.fullname" . | lower }}
  labels:
    {{- include "keycloak.oauthProxy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.oauthProxy.autoscaling.enabled }}
  replicas: {{ .Values.oauthProxy.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "keycloak.oauthProxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.oauthProxy.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak.oauthProxy.labels" . | nindent 8 }}
        {{- with .Values.oauthProxy.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with uniq (concat (.Values.imagePullSecrets | default (list)) (.Values.global.imagePullSecrets | default (list))) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak.oauthProxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.oauthProxy.podSecurityContext | nindent 8 }}
      initContainers:
        - command:
            - /bin/sh
            - -c
            - |
                while [ $(curl -sw '%{http_code}' "http://{{ include "keycloak.fullname" . | lower }}:{{ .Values.service.port }}{{ $keycloakPath }}/realms/master" -o /dev/null) -ne 200 ]; do
                  echo "Waiting for ID provider to reach ready state...";
                  sleep 15;
                done
          image: "{{ $kubectl_repo_base }}/{{ .Values.image.kubectl.repo.path }}:{{ .Values.image.kubectl.tag }}"
          imagePullPolicy: {{ .Values.image.kubectl.pullPolicy }}
          name: idp-ready
          resources:
            limits:
              cpu: 50m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 32Mi
          securityContext:
            {{- toYaml .Values.oauthProxy.securityContext | nindent 12 }}
      containers:
        - name: oauth2-proxy
          securityContext:
            {{- toYaml .Values.oauthProxy.securityContext | nindent 12 }}
          image: "{{ $oauthProxy_repo_base }}/{{ .Values.oauthProxy.image.repo.path }}:{{ .Values.oauthProxy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.oauthProxy.image.pullPolicy }}
          args:
            - --config=/config/oauth2-proxy.cfg
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret
                  key: sv-client-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret
                  key: sv-client-secret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.oauthProxy.fullname" . | lower }}
                  key: cookie-secret
              # head -c 32 /dev/random | base64 -w 0
              #value: xvL2dHsqwThpkUOHYdWFn95TIUuKxuTbspLrSjJtSW8=
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_UID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.uid
          ports:
            - containerPort: 4180
              name: http
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: true
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - configMap:
            name: {{ include "keycloak.oauthProxy.fullname" . | lower }}
          name: config
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}