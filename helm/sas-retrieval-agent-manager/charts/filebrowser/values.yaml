# vim: set ft=yaml:
# yaml-language-server: $schema=values.schema.json

# Default values for filebrowser.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# @schema
# required: true
# type: boolean
# default: false
# @schema
# -- Enable the actual filebrowser deployment. Set to true to deploy the filebrowser component
enabled: false

# @schema
# required: true
# type: integer
# default: 1
# @schema
# -- Number of replicas to run. Chart is not designed to scale horizontally, use at your own risk
replicaCount: 1

# @schema
# required: true
# type: object
# @schema
# -- Container image configuration for Filebrowser and related services
image:
  # @schema
  # required: true
  # type: object
  # @schema
  # -- Container image configuration
  repo:
    # @schema
    # required: true
    # type: string
    # default: docker.io
    # @schema
    # -- Container registry base URL
    base: docker.io
    # @schema
    # required: true
    # type: string
    # default: filebrowser/filebrowser
    # @schema
    # -- Container image path/name
    path: filebrowser/filebrowser
  # @schema
  # default: IfNotPresent
  # enum: [Always,Never,IfNotPresent]
  # @schema
  # -- Container image pull policy
  pullPolicy: IfNotPresent
  # @schema
  # required: true
  # type: string
  # @schema
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "v2.42.1" # https://hub.docker.com/r/filebrowser/filebrowser/tags

# @schema
# type: array
# items:
#   type: object
#   properties:
#     name:
#       type: string
#       example: cr-sas-secret
# default: []
# @schema
# -- Array of imagePullSecrets in the namespace for pulling images
imagePullSecrets: []

# @schema
# required: true
# type: string
# default: filebrowser
# @schema
# -- String to partially override the fullname template with a string (will prepend the release name)
nameOverride: "filebrowser"

# @schema
# required: true
# type: string
# default: sas-retrieval-agent-manager-filebrowser
# @schema
# -- String to fully override the fullname template with a string
fullnameOverride: "sas-retrieval-agent-manager-filebrowser"

# @schema
# required: true
# type: object
# @schema
# -- Service account configuration for API
serviceAccount:
  # @schema
  # type: object
  # default: {}
  # @schema
  # -- Annotations to add to the service account
  annotations: {}
  # @schema
  # required: true
  # type: boolean
  # default: true
  # @schema
  # -- Specifies whether a service account should be created
  create: true
  # @schema
  # required: false
  # type: string
  # default: ""
  # @schema
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ''

# @schema
# type: object
# default: {}
# @schema
# -- Annotations to add to the pods
podAnnotations: {}

# @schema
# type: object
# default: {"sas.com/deployment":"sas-retrieval-agent-manager","workload.sas.com/class":"ram"}
# @schema
# -- Labels to add to the pods
podLabels:
  sas.com/deployment: "sas-retrieval-agent-manager"
  workload.sas.com/class: "ram"

# @schema
# type: [object,null]
# default: {"runAsGroup":10001,"runAsNonRoot":true,"runAsUser":10001,"seccompProfile":{"type":"RuntimeDefault"},"fsGroup":10001}
# properties:
#   appArmorProfile:
#     description: appArmorProfile is the AppArmor options to use by the containers in this pod.
#     type: [object,null]
#     properties:
#       localhostProfile:
#         type: string
#       type:
#         enum: [Localhost,RuntimeDefault]
#   fsGroup:
#     description: A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.
#     format: int64
#     type: [integer,null]
#     default: 10001
#   fsGroupChangePolicy:
#     enum:
#       - OnRootMismatch
#       - Always
#     default: Always
#   runAsGroup:
#     description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
#     format: int64
#     type: [integer,null]
#     default: 10001
#   runAsNonRoot:
#     description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
#     type: [boolean,null]
#     default: true
#   runAsUser:
#     description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
#     format: int64
#     type: [integer,null]
#     default: 10001
#   seLinuxOptions:
#     description: The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
#     type: [object,null]
#     properties:
#       level:
#         type: string
#       role:
#         type: string
#       type:
#         type: string
#       user:
#         type: string
#   seccompProfile:
#     description: The seccomp options to use by the containers in this pod.
#     type: [object,null]
#     properties:
#       localhostProfile:
#         type: string
#       type:
#         enum: [Localhost,RuntimeDefault]
#   supplementalGroups:
#     description: A list of groups applied to the first process run in each container, in addition to the container's primary GID and fsGroup (if specified).  If the SupplementalGroupsPolicy feature is enabled, the supplementalGroupsPolicy field determines whether these are in addition to or instead of any group memberships defined in the container image. If unspecified, no additional groups are added, though group memberships defined in the container image may still be used, depending on the supplementalGroupsPolicy field.
#     type: [array,null]
#     items:
#       format: int64
#       type: [integer,null]
#   supplementalGroupsPolicy:
#     description: Defines how supplemental groups of the first container processes are calculated. Valid values are "Merge" and "Strict". If not specified, "Merge" is used. (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled and the container runtime must implement support for this feature.
#     enum:
#       - Merge
#       - Strict
#     default: Merge
#   sysctls:
#     description: Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
#     type: [array,null]
#     items:
#       type: object
#       properties:
#         name:
#           type: string
#         value:
#           type: string
# @schema
# -- The security context for the pods
podSecurityContext: {}
  # -- Group ID to run the entrypoint of the container process
  # runAsGroup: 1001
  # -- Indicates that the container must be run as a non-root user
  # runAsNonRoot: true
  # -- User ID to run the entrypoint of the container process
  # runAsUser: 1001
  # -- Seccomp profile for the pod
  # seccompProfile:
  #   type: RuntimeDefault
  # -- Group ID for file system ownership
  # fsGroup: 2000

# @schema
# type: [object,null]
# default: {"privileged":false,"seccompProfile":{"type":"RuntimeDefault"},"allowPrivilegeEscalation":false,"capabilities":{"add":[],"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":10001,"runAsGroup":10001}
# properties:
#   allowPrivilegeEscalation:
#     description: AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is run as Privileged or has CAP_SYS_ADMIN
#     type: boolean
#     default: false
#   appArmorProfile:
#     description: appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod's appArmorProfile.
#     type: [object,null]
#     properties:
#       localhostProfile:
#         type: string
#       type:
#         enum: [Localhost,RuntimeDefault]
#   capabilities:
#     description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
#     type: [object,null]
#     properties:
#       add:
#         description: Added capabilities
#         type: [array,null]
#         items:
#           type: string
#         default: []
#       drop:
#         description: Dropped capabilities
#         type: [array,null]
#         items:
#           type: string
#         default: [ALL]
#   privileged:
#     description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host.
#     type: [boolean,null]
#     default: false
#   procMount:
#     description: procMount denotes the type of proc mount to use for the containers. The default value is Default which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
#     type: [string,null]
#   readOnlyRootFilesystem:
#     description: Whether this container has a read-only root filesystem. Default is false.
#     type: [boolean,null]
#     default: false
#   runAsGroup:
#     description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
#     format: int64
#     type: [integer,null]
#     default: 10001
#   runAsNonRoot:
#     description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
#     type: [boolean,null]
#     default: true
#   runAsUser:
#     description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
#     format: int64
#     type: [integer,null]
#     default: 10001
#   seLinuxOptions:
#     description: The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
#     type: [object,null]
#     properties:
#       level:
#         type: string
#       role:
#         type: string
#       type:
#         type: string
#       user:
#         type: string
#   seccompProfile:
#     description: The seccomp options to use by the containers in this pod.
#     type: [object,null]
#     properties:
#       localhostProfile:
#         type: string
#       type:
#         enum: [Localhost,RuntimeDefault]
# @schema
# -- The security context for the application container
securityContext: {}
  # -- Run as non-privileged container
  # privileged: false
  # -- Seccomp profile for the container
  # seccompProfile:
  #   type: RuntimeDefault
  # -- Whether a process can gain more privileges than its parent process
  # allowPrivilegeEscalation: false
  # -- Linux capabilities to add/drop for the container
  # capabilities:
  #   add: []
  #   drop:
  #     - ALL
  # -- Whether the container has a read-only root filesystem
  # readOnlyRootFilesystem: true
  # -- Whether the container must be run as a non-root user
  # runAsNonRoot: true
  # -- User ID to run the entrypoint of the container process
  # runAsUser: 1001
  # -- Group ID to run the entrypoint of the container process
  # runAsGroup: 1001

# @schema
# required: true
# type: object
# @schema
# -- Kubernetes Service configuration
service:
  # @schema
  # required: true
  # description: Service type must be one of ClusterIP, NodePort, or LoadBalancer.
  # enum:
  #   - ClusterIP
  #   - NodePort
  #   - LoadBalancer
  # @schema
  # -- Kubernetes Service type
  type: ClusterIP
  # @schema
  # required: true
  # description: The port that will be exposed by this service.
  # type: integer
  # default: 80
  # @schema
  # -- Kubernetes Service port
  port: 80


# @schema
# required: true
# type: object
# @schema
# -- Ingress configuration for external access to Filebrowser
ingress:
  # @schema
  # required: true
  # type: boolean
  # default: false
  # @schema
  # -- Use global ingress configuration instead of local hosts configuration
  useGlobal: false
  # @schema
  # required: true
  # type: boolean
  # default: true
  # @schema
  # -- Enable ingress for external access to API
  enabled: true
  # @schema
  # required: true
  # type: string
  # default: nginx
  # @schema
  # -- Class name of the Ingress
  className: nginx
  # @schema
  # type: object
  # default:
  #   nginx.ingress.kubernetes.io/auth-signin: https://$host/SASRetrievalAgentManager/oauth2/start?rd=$escaped_request_uri
  #   nginx.ingress.kubernetes.io/auth-url: https://$host/SASRetrievalAgentManager/oauth2/auth
  #   nginx.ingress.kubernetes.io/proxy-body-size: 500m
  #   nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
  #   nginx.ingress.kubernetes.io/rewrite-target: /$2
  #   nginx.ingress.kubernetes.io/ssl-redirect: 'true'
  # @schema
  # -- Annotations for the Ingress
  annotations:
    # -- OAuth2 authentication sign-in URL
    nginx.ingress.kubernetes.io/auth-signin: https://$host/SASRetrievalAgentManager/oauth2/start?rd=$escaped_request_uri
    # -- OAuth2 authentication validation URL
    nginx.ingress.kubernetes.io/auth-url: https://$host/SASRetrievalAgentManager/oauth2/auth
    # -- Maximum allowed size of client request body (for file uploads)
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    # -- Size of buffer used for reading the first part of response received from proxied server
    nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
    # -- URL rewrite rule to strip the prefix path
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # -- Force SSL redirect
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'

  # -- Hosts for the ingress
  # @default -- see [values.yaml](values.yaml)

  # If useGlobal = False
  # hosts:
  # - host: chart-example.local
  #   paths:
  #     - path: /files(/|$)(.*)
  #       pathType: ImplementationSpecific

  # @schema
  # type: [array,null]
  # items:
  #   type: object
  #   properties:
  #     host:
  #       type: string
  #       required: true
  #     paths:
  #       type: [array,null]
  #       items:
  #         type: object
  #         properties:
  #           path:
  #             type: string
  #             default: "/SASRetrievalAgentManager/files(/|$)(.*)"
  #             required: true
  #           pathType:
  #             type: string
  #             default: ImplementationSpecific
  #             required: true
  # @schema
  # If useGlobal = True
  # -- Ingress path configuration when useGlobal is true
  paths:
    - path: /SASRetrievalAgentManager/files(/|$)(.*)
      pathType: ImplementationSpecific
  # @schema
  # type: [array,null]
  # items:
  #   type: object
  #   properties:
  #     secretName:
  #       type: string
  #       required: true
  #     hosts:
  #       type: array
  #       required: true
  #       items:
  #         type: string
  # default:
  #   - path: "/SASRetrievalAgentManager/auth(/(realms|resources)/(.*))$"
  #     pathType: ImplementationSpecific
  # @schema
  # -- TLS configuration for ingress
  tls: []
    # - secretName: ""
    #   hosts:
    #     - ""

# @schema
# type: object
# required: true
# properties:
#   claims:
#     type: array
#     items:
#       type: object
#       properties:
#         name:
#           type: string
#         request:
#           type: string
#   limits:
#     type: object
#   requests:
#     type: object
# @schema
# -- The resources to allocate for the container
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# @schema
# type: [object,null]
# @schema
# -- Node labels for pod assignment
nodeSelector: {}

# @schema
# type: [array,null]
# @schema
# -- Tolerations for pod assignment
tolerations: []

# @schema
# type: [object,null]
# @schema
# -- Map of node/pod affinities
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
            - key: sas.com/deployment
              operator: In
              values:
                - sas-retrieval-agent-manager
      - weight: 2
        preference:
          matchExpressions:
            - key: workload.sas.com/class
              operator: In
              values:
                - ram

# @schema
# type: object
# required: true
# additionalProperties: true
# @schema
rootDir:
  # @schema
  # enum: [pvc, hostPath, emptyDir]
  # required: true
  # @schema
  # -- Type of rootDir mount. Valid values are [pvc, hostPath, emptyDir]
  type: pvc
  # @schema
  # type: boolean
  # required: true
  # @schema
  # -- Mount the root directory in read-only mode
  readOnly: false
  # @schema
  # type: object
  # required: true
  # @schema
  # -- Host path configuration (only used when type is 'hostPath')
  hostPath:
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Path on the host to mount
    path: /mnt/data
  # @schema
  # type: object
  # required: true
  # @schema
  # -- Persistent Volume Claim configuration (only used when type is 'pvc')
  pvc:
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Name for the PVC
    name: vhub-pv
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Storage class name for the root directory PVC
    storageClassName: "azurefile-sas"
    # @schema
    # type: boolean
    # required: true
    # @schema
    # -- Whether to create the storage class if it doesn't exist
    createStorageClass: true
    # @schema
    # type: array
    # items:
    #   type: string
    # required: true
    # @schema
    # -- Access modes for the root directory PVC
    accessModes:
      - ReadWriteOnce
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Size for the root directory PVC
    size: 20Gi

# @schema
# type: object
# required: true
# @schema
# -- Database configuration for Filebrowser
db:
  # @schema
  # type: object
  # required: true
  # @schema
  # -- Database persistence configuration
  pvc:
    # @schema
    # type: boolean
    # required: true
    # @schema
    # -- Enable persistence for database
    enabled: true
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Storage class name for the database PVC
    storageClassName: ""
    # @schema
    # type: array
    # items:
    #   type: string
    # required: true
    # @schema
    # -- Access modes for the database PVC
    accessModes:
      - ReadWriteOnce
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Size for the database PVC
    size: 256Mi

# @schema
# type: object
# required: true
# @schema
# -- Deployment strategy to use (Recreate is recommended for stateful applications)
strategy:
  # @schema
  # type: string
  # required: true
  # @schema
  type: Recreate

# @schema
# type: [object,null]
# required: true
# additionalProperties: true
# @schema
# -- Liveness probe configuration (disabled by default, enable if needed)
livenessProbe: {}

# @schema
# type: [object,null]
# required: true
# additionalProperties: true
# @schema
# -- Readiness probe configuration
readinessProbe:
  httpGet:
    path: /health
    port: http

# @schema
# type: array
# items:
#   type: object
# default: []
# required: true
# @schema
# -- Set of initContainers for the deployment
initContainers: []

# @schema
# type: object
# required: true
# @schema
# -- File Browser application specific configuration
config:
  # @schema
  # required: true
  # description: The port that will be exposed by this service.
  # type: integer
  # default: 18080
  # @schema
  # -- Port on which the filebrowser application listens inside the container
  port: 18080
  # @schema
  # type: string
  # required: true
  # default: /files
  # @schema
  # -- Base URL path for the filebrowser application
  baseURL: "/files"
  # @schema
  # type: string
  # required: true
  # default: ""
  # @schema
  # -- Address to bind the server to (empty means all interfaces)
  address: ""
  # @schema
  # enum: [stdout, stderr, file]
  # required: true
  # default: stdout
  # @schema
  # -- Log output destination (stdout, stderr, or file path)
  log: stdout
  # @schema
  # type: string
  # required: true
  # default: /db/filebrowser.db
  # @schema
  # -- Path to the SQLite database file for storing filebrowser configuration
  database: /db/filebrowser.db
  # @schema
  # type: string
  # required: true
  # default: /mnt/data
  # @schema
  # -- Root directory that filebrowser will serve and manage files from
  root: /mnt/data