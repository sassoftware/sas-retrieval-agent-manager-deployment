{{- $repo_base := "" -}}
{{- $repo_path := "" -}}
{{- if .Values.image.repo.useGlobal | default false -}}
  {{- $repo_base = .Values.global.image.repo.base | default .Values.image.repo.base -}}
{{- else -}}
  {{- $repo_base = .Values.image.repo.base -}}
{{- end -}}
{{- $repo_path = .Values.image.repo.path -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sas-retrieval-agent-manager-api.fullname" . }}
  labels:
    {{- include "sas-retrieval-agent-manager-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sas-retrieval-agent-manager-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sas-retrieval-agent-manager-api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with uniq (concat (.Values.imagePullSecrets | default (list)) (.Values.global.imagePullSecrets | default (list))) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sas-retrieval-agent-manager-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ $repo_base }}/{{ $repo_path }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if $.Values.global.configuration.swagger.enabled }}
            - name: DOCS_ENABLED
              value: {{ $.Values.global.configuration.swagger.enabled | quote }}
            {{- end }}
            {{- with .Values.global.configuration.api.useOldLicense }}
            - name: USE_OLD_LICENSE
              value: {{ . | quote }}
            {{- end }}
            - name: KEYCLOAK_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  key: basePath
                  name: keycloak-config
            - name: KEYCLOAK_SECRET_PATH
              value: {{ .Values.global.configuration.keycloak.secret_path }}
            - name: LATEST_API_VERSION
              value: {{ .Values.global.configuration.api.latest_version | quote }}
            - name: LICENSE_SECRET_PATH
              value: {{ .Values.global.configuration.api.license_secret_path }}
            - name: LICENSE_SECRET
              value: {{ .Values.global.configuration.api.license_secret }}
            - name: GPG_PRIVATE_KEY_PATH
              value: "{{ .Values.global.configuration.gpg.private_key_path }}/private.key"
            - name: GPG_PASSPHRASE_PATH
              value: "{{ .Values.global.configuration.gpg.passphrase_path }}/passphrase.txt"
            - name: ESP_VECTORHUB_TAG
              valueFrom:
                configMapKeyRef:
                  name: vhub-config
                  key: vhub_tag
            - name: ESP_VECTORHUB_REPOSITORY
              valueFrom:
                configMapKeyRef:
                  name: vhub-config
                  key: vhub_repository
            - name: PLUGIN_RUNNER_TAG
              valueFrom:
                configMapKeyRef:
                  name: plugin-config
                  key: plugin_runner_tag
            - name: PLUGIN_RUNNER_REPOSITORY
              valueFrom:
                configMapKeyRef:
                  name: plugin-config
                  key: plugin_runner_repo
            - name: EVAL_RUNNER_TAG
              valueFrom:
                configMapKeyRef:
                  name: eval-config
                  key: eval_runner_tag
            - name: EVAL_RUNNER_REPOSITORY
              valueFrom:
                configMapKeyRef:
                  name: eval-config
                  key: eval_runner_repo
            - name: IMAGE_PULL_SECRET
              valueFrom:
                configMapKeyRef:
                  name: vhub-config
                  key: vhub_pull_secret
            - name: POSTGREST_ADMIN_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgrest-configmap
                  key: adminService
            - name: POSTGREST_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgrest-configmap
                  key: service
            - name: BASE_PATH
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: base_path
            - name: AWS_CERT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: vhub-config
                  key: aws_cert_secret
            - name: SSL_VERIFY
              value: '{{ index .Values.global.configuration.api "sslVerify" }}'
            - name: LOG_LEVEL
              value: '{{ index .Values.global.configuration.api "log_level" | default "INFO" }}'
            - name: NUM_WORKERS
              value: '{{ index .Values.global.configuration.api "num_workers" }}'
            - name: ENABLE_PROFILING
              value: '{{ index .Values.global.configuration.api "enable_profiling" }}'
            - name: ENABLE_DEV_MODE
              value: '{{ index .Values.global.configuration.api "enable_dev_mode" }}'
            {{- with .Values.global.configuration.api.azure_settings.openAI.default_api_version }}
            - name: AZURE_OPENAI_DEFAULT_API_VERSION
              value: '{{ . }}'
            {{- end }}
            {{- if .Values.global.configuration.api.azure_settings.azure_identity.enabled }}
            {{- with .Values.global.configuration.api.azure_settings.azure_identity.scope }}
            - name: AZURE_IDENTITY_SCOPE
              value: '{{ . }}'
            {{- end }}
            {{- with .Values.global.configuration.api.azure_settings.azure_identity.enabled }}
            - name: AZURE_IDENTITY_ENABLED
              value: '{{ . }}'
            {{- end }}
            {{- with .Values.global.configuration.api.azure_settings.azure_identity.token_keyword }}
            - name: AZURE_IDENTITY_TOKEN_KEYWORD
              value: '{{ . }}'
            {{- end }}
            - name: EVAL_SERVICE_ACCOUNT_NAME
              value: {{ include "sas-retrieval-agent-manager-api.serviceAccountName" . }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8765
              protocol: TCP
            - name: noauth-http
              containerPort: 8766
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: temp-storage
            - name: config-volume
              mountPath: /mnt/config/available_hardware.json
              subPath: available_hardware
            - name: data
              mountPath: "/mnt/data"
              readOnly: false
            - name: license-volume
              mountPath: {{ .Values.global.configuration.api.license_secret_path }}
              readOnly: true
            - name: keycloak-volume
              mountPath: {{ .Values.global.configuration.keycloak.secret_path }}
              readOnly: true
            - name: gpg-private-key-volume
              mountPath: {{ .Values.global.configuration.gpg.private_key_path }}
              readOnly: true
            - name: gpg-passphrase-volume
              mountPath: {{ .Values.global.configuration.gpg.passphrase_path }}
              readOnly: true
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: temp-storage
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: vhub-pv
        - name: config-volume
          configMap:
            name: vhub-config
        - name: license-volume
          secret:
            secretName: license-secret
            items:
              - key: license.jwt
                path: license.jwt
        - name: keycloak-volume
          secret:
            secretName: keycloak-client-secret
            items:
              - key: realm
                path: realm.txt
              - key: url
                path: url.txt
              - key: sv-client-id
                path: client_id.txt
              - key: sv-client-secret
                path: client_secret.txt
        - name: gpg-private-key-volume
          secret:
            secretName: gpg-private-key
            items:
              - key: privateKey
                path: private.key
        - name: gpg-passphrase-volume
          secret:
            secretName: gpg-passphrase
            items:
              - key: passphrase
                path: passphrase.txt
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
