{{- if .Values.global.configuration.database.initializeDb -}}
{{- $postgres_repo_base := "" -}}
{{- $postgres_repo_path := "" -}}
{{- $kubectl_repo_base := "" -}}
{{- $kubectl_repo_path := "" -}}
{{- if hasKey .Values.global "repo" -}}
  {{- if .Values.image.postgres.useGlobal -}}
    {{- $postgres_repo_base = .Values.global.repo.base | default .Values.image.postgres.repo.base -}}
  {{- else -}}
    {{- $postgres_repo_base = .Values.image.postgres.repo.base -}}
  {{- end -}}
  {{- if .Values.image.kubectl.useGlobal -}}
    {{- $kubectl_repo_base = .Values.global.image.repo.base | default .Values.image.kubectl.repo.base -}}
  {{- else -}}
    {{- $kubectl_repo_base = .Values.image.kubectl.repo.base -}}
  {{- end -}}
{{- else -}}
  {{- $postgres_repo_base = .Values.image.postgres.repo.base -}}
  {{- $kubectl_repo_base = .Values.image.kubectl.repo.base -}}
{{- end -}}
{{- $postgres_repo_path = .Values.image.postgres.repo.path -}}
{{- $kubectl_repo_path = .Values.image.kubectl.repo.path -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "sas-retrieval-agent-manager-db-init.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-options: Skip
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sas-retrieval-agent-manager-db-init.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with uniq (concat (.Values.imagePullSecrets | default (list)) (.Values.global.imagePullSecrets | default (list))) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sas-retrieval-agent-manager-db-init.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: initialization
          command:
            - "/bin/sh"
            - "-c"
            - "/scripts/initialize_database.sh"
          image: "{{ $postgres_repo_base }}/{{ $postgres_repo_path }}:{{ .Values.image.postgres.tag }}"
          imagePullPolicy: {{ .Values.image.postgres.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: temp-storage
            - name: db-connection
              mountPath: /config/db
            - name: db-admin-credentials
              mountPath: /secret/admin
              readOnly: true
            - name: db-keycloak-connection
              mountPath: /config/keycloak
            - name: db-keycloak-credentials
              mountPath: /secret/keycloak
              readOnly: true
            - name: db-migration-credentials
              mountPath: /secret/migration
              readOnly: true
            - name: db-application-connection
              mountPath: /config/postgrest
            - name: db-application-credentials
              mountPath: /secret/postgrest
              readOnly: true
            - name: db-vector-store-connection
              mountPath: /config/vectorstore
            - name: db-vector-store-credentials
              mountPath: /secret/vectorstore
              readOnly: true
            - name: db-vectorization-job-credentials
              mountPath: /secret/vectorizationjob
              readOnly: true
            - name: application-roles
              mountPath: /config/application-roles
            - name: configmap-scripts
              mountPath: /scripts
            - name: db-connection
              mountPath: /config/db-connection
      containers:
        - name: secret-cleaning
          command:
            - "/bin/sh"
            - "-c"
            - "/scripts/clean_admin_secret.sh"
          image: "{{ $kubectl_repo_base }}/{{ $kubectl_repo_path }}:{{ .Values.image.kubectl.tag }}"
          imagePullPolicy: {{ .Values.image.kubectl.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /workdir
              name: workdir
            - mountPath: /tmp
              name: temp-storage
            - name: configmap-scripts
              mountPath: /scripts
      restartPolicy: OnFailure
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: workdir
          emptyDir: {}
        - name: temp-storage
          emptyDir: {}
        - name: db-connection
          configMap:
            name: db-connection
        - name: db-admin-credentials
          secret:
            secretName: admin-db-credentials
        - name: db-keycloak-connection
          configMap:
            name: db-keycloak
        - name: db-keycloak-credentials
          secret:
            secretName: keycloak-db-credentials
        - name: db-migration-credentials
          secret:
            secretName: migration-db-credentials
        - name: db-application-connection
          configMap:
            name: db-application
        - name: db-application-credentials
          secret:
            secretName: application-db-credentials
        - name: db-vector-store-connection
          configMap:
            name: db-vector-store
        - name: db-vector-store-credentials
          secret:
            secretName: vector-store-db-credentials
        - name: db-vectorization-job-credentials
          secret:
            secretName: vectorization-job-db-credentials
        - name: application-roles
          configMap:
            name: application-roles
        - name: configmap-scripts
          configMap:
            name: {{ .Chart.Name }}-scripts
            defaultMode: 0777
  backoffLimit: 1000
{{- end }}